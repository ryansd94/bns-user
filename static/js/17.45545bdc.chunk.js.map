{"version":3,"sources":["views/project/Template/TemplateToolbar.js","views/project/Template/templateGrid.js","views/project/Template/Template.js","components/icon/icon.js","components/label/labelControl.js","services/base.js","services/account/account.service.js","services/category/team/team.service.js","services/category/area/area.service.js","services/user/user.service.js","services/configs/filter.service.js","services/common/common.service.js","components/button/ButtonIcon.js","components/input/TextInput.js","components/button/ButtonFuntion.js","components/select/SingleAddSelect.js","components/popover/PopoverControl.js","components/input/numberInput.js","components/chip/ChipControl.js","components/button/ButtonDetail.js","components/checkbox/CheckBox.js","components/dropdown/ConfigColumn.js","components/dropdown/DropdownMenu.js","components/dropdown/dropDownItem.js","components/select/MultiSelect.js","components/datepicker/DatePickerInput.js","components/link/LinkControl.js","components/pagination/usePagination.js","components/pagination/Pagination.js","components/loading/Loading.js","components/table/GridData.js","components/filter/filterItem.js","components/filter/filter.js","components/toolbar/ToolBar.js","components/resizable/resizable.js","components/popup/AlertDialog.js","components/popup/confirmDeleteDialog.js"],"names":["TemplateToolbar","props","console","log","onApplyFilter","t","useTranslation","dispatch","useDispatch","toolbarVisible","useSelector","state","master","columnVisibility","template","columnModel","field","isShow","label","type","EFilterType","text","datetime","ToolBar","visible","onColumnConfigChange","event","target","name","checked","setColumnVisibility","onAddClick","window","open","TemplateGrid","React","memo","filterModels","useState","id","setId","loading","checkboxSelection","resizable","width","headerCheckboxSelection","pinned","headerName","flex","cellRenderer","params","href","data","title","suppressAutoSize","formatDate","createdDate","status","_isMainAccount","isMainAccount","deleteElement","ButtonIcon","disabled","onClick","e","openAlert","createElement","sortable","column","style","url","baseUrl","jm_template","GridData","columns","Template","setFilterModels","value","genderLeftComponent","IconSave","className","IconDelete","size","IconEdit","IconCancel","IconEmail","IconActive","IconBlock","IconUnBlock","IconApply","IconBack","IconMore","IconAdd","IconCricle","IconUp","IconDown","IconExpand","IconUpload","IconChange","IconCopy","IconComment","LabelControl","required","Typography","color","createInstance","instance","axios","create","baseURL","process","headers","paramsSerializer","queryString","stringify","interceptors","request","use","token","getAccessToken","Authorization","response","httpStatus","error","a","originalRequest","config","UNAUTHORIZED","_retry","resetRefreshTokenFailure","Promise","reject","login","post","res","loginGoogle","registerGoogle","param","query","services","getTeamByID","get","saveTeam","put","signup","sendMailUser","validateTokenSignup","save","_","isEmpty","buildQueryString","getByID","deleteData","delete","useStyles","makeStyles","root","pointerEvents","button","icon","classes","showTooltip","refs","titleDefault","setTitle","theme","createTheme","palette","neutral","main","EColor","cancel","contrastText","useEffect","EButtonIconType","edit","apply","back","add","up","down","comment","height","adjustedButtonProps","component","undefined","more","upload","ref","defaultProps","ESize","medium","TextInput","control","autoFocus","hidden","inputProps","variant","fullWidth","multiline","defaultValue","placeholder","focused","onChange","loadingPopup","render","fieldState","_ControlSizeDefault","EVariant","outlined","rows","maxRows","helperText","message","_TemplateVariant","autoComplete","normal","valueChange","parseFloat","sx","overflow","textOverflow","ButtonFuntion","marginLeft","spacing","spacingLeft","breakpoints","minWidth","paddingLeft","paddingRight","margin","fontSize","buttonIcon","padding","buttonIconText","display","buttonText","endIcon","onClickAway","isFloatLeft","setIcon","setText","float","setFloat","startIcon","setStartIcon","setColor","isButtonIcon","setIsButtonIcon","EButtonType","addFilter","columnConfig","filter","clearFilter","function","refresh","addTag","reply","setButton","disableTouchRipple","isNil","position","createFilterOptions","SingleAddSelect","onSelectChange","renderOption","renderTags","renderInput","disableClearable","freeSolo","isAddWhenNoOption","onInputChange","options","isOptionEqualToValue","option","getOptionLabel","selectOnFocus","autoHighlight","handleHomeEndKeys","item","find","x","filterOptions","filtered","inputValue","length","push","uuidv4","isAddNew","newValue","mr","flexShrink","key","getTagProps","map","index","popover","popoverContent","PopoverControl","anchorEl","onClose","genderBody","anchorOrigin","transformOrigin","isHideWhenWithOutFocus","Boolean","Popover","stopPropagation","paper","vertical","horizontal","NumberInput","stackRoot","ChipControl","parentClassName","classNameContent","Stack","direction","Chip","ButtonDetail","defaultLoading","setDefaultLoading","EButtonDetailType","ok","undo","accpet","themeButton","speed","fill","stroke","CheckBox","FormGroup","FormControlLabel","Checkbox","StyledMenu","styled","Menu","elevation","borderRadius","marginTop","mode","grey","boxShadow","backgroundColor","alpha","primary","action","selectedOpacity","ConfigColumn","handleClose","MenuListProps","MenuItem","disableRipple","DropdownMenu","genderDropdownItem","isShowEndIcon","isCLoseOnClick","classNameIcon","setOpen","anchorRef","useRef","handleToggle","prevOpen","current","contains","PaperProps","mt","ml","content","top","right","bgcolor","zIndex","DropDownItem","Grid","container","columnSpacing","alignItems","MultiSelect","setValue","handleKeyDown","preventDefault","getDataByDefaultValue","o","indexOf","multiple","filterSelectedOptions","onKeyDown","marginBottom","limitTags","DatePickerInput","EFormatDate","ddmmyyyy","Skeleton","LocalizationProvider","dateAdapter","AdapterDateFns","DesktopDatePicker","clearable","inputFormat","TextField","mask","LinkControl","underline","Link","DOTS","range","start","end","Array","from","idx","Pagination","onPageChange","totalCount","siblingCount","currentPage","onPageLengthChange","pageSize","useForm","defaultValues","paginationRange","useMemo","totalPageCount","Math","ceil","leftSiblingIndex","max","rightSiblingIndex","min","shouldShowLeftDots","shouldShowRightDots","firstPageIndex","lastPageIndex","leftRange","rightRange","middleRange","usePagination","onNext","onPrevious","renderPageSizeElement","classnames","selected","lastPage","pageNumber","Loading","ModuleRegistry","registerModules","ClientSideRowModelModule","gridRef","rowHeight","onRowClicked","frameworkComponents","autoGroupColumnDef","columnsDef","setColumnsDef","gridStyle","flexDirection","setCurrentPage","sortModel","setSortModel","isReload","setData","defaultColDef","gridOptions","loadingOverlayComponent","loadingOverlayComponentParams","loadingMessage","api","showLoadingOverlay","hideOverlay","columnApi","setColumnVisible","fetchData","URLSearchParams","location","search","filterParams","draw","fieldSort","sort","filters","then","onGridReady","useCallback","setReloadNull","animateRows","enableRangeSelection","rowData","items","domLayout","columnDefs","rowSelection","onFirstDataRendered","allColumnIds","getAllColumns","forEach","colDef","getId","autoSizeColumns","enableCellTextSelection","onSortChanged","b","columnState","getColumnState","colId","suppressRowClickSelection","suppressCellFocus","groupSelectsChildren","suppressAggFuncInHeader","onSelectionChanged","newSelection","getSelectedNodes","node","setToolbarVisibility","setPageSize","parseInt","recordsTotal","FilterItem","onDeleteItem","onClearValue","onClearConditionValue","getValues","textOptions","selectOptions","dateOptions","conditionOption","setConditionOption","conditionValue","setConditionValue","columnValue","setColumnValue","valueComponent","setValueComponent","setDisplay","setWidth","disableCondition","setDisableCondition","getConditionValue","select","condition","valueItem","isCustom","isHideFilter","setColumnModelData","Filter","dropdownItem","anchorSave","setAnchorSave","filterData","setFilterData","reset","handleSubmit","setError","useFieldArray","fields","append","remove","handleCloseSave","useHistory","useLocation","dataFromServer","test","selectValue","loadFilters","sys_filter","isGetAll","filterObject","JSON","parse","onSave","getDataFilter","join","Collapse","in","timeout","unmountOnExit","Box","rowSpacing","xs","URL","isArray","searchParams","set","history","pushState","toString","currentTarget","flexWrap","onDeleteClick","genarateCustomButton","anchorElColumn","setAnchorElColumn","anchorElFilter","setAnchorElFilter","setReload","addVisible","deleteVisible","cx","classNames","bind","Resizable","genderRightComponent","hidenRight","handleClass","borderClass","AlertDialog","alertDialog","onSubmit","Dialog","DialogTitle","DialogActions","dis","ConfirmDeleteDialog","onAcceptDelete","loadingButton","errorCode","ERROR_CODE","success","openMessage"],"mappings":"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","file":"static/js/17.45545bdc.chunk.js","sourcesContent":["import React from 'react'\r\nimport ToolBar from \"components/toolbar/ToolBar\"\r\nimport PropTypes from 'prop-types'\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport {\r\n    setColumnVisibility,\r\n} from \"stores/views/template\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport { EFilterType } from \"configs\"\r\nconst TemplateToolbar = (props) => {\r\n    console.log(\"render template toolbar\")\r\n    const { onApplyFilter } = props\r\n    const { t } = useTranslation()\r\n    const dispatch = useDispatch()\r\n    const toolbarVisible = { ...useSelector((state) => state.master.toolbarVisible) }\r\n    const columnVisibility = { ...useSelector((state) => state.template.columnVisibility) }\r\n    const columnModel = [{\r\n        field: \"name\", isShow: true, label: t(\"Tên mẫu\"), type: EFilterType.text\r\n    },\r\n    {\r\n        field: \"description\", isShow: true, label: t(\"Mô tả\"), type: EFilterType.text\r\n    },\r\n    {\r\n        field: \"createdDate\", isShow: true, label: t(\"Ngày tạo\"), type: EFilterType.datetime\r\n    }]\r\n    const handleColumnConfigChange = (event) => {\r\n        columnVisibility[event.target.name] = event.target.checked\r\n        dispatch(setColumnVisibility({ ...columnVisibility }))\r\n    }\r\n    \r\n    const handleClickOpen = () => {\r\n        window.open(`/template/add`)\r\n    }\r\n\r\n    return <div>\r\n        <ToolBar visible={toolbarVisible}\r\n            onApplyFilter={onApplyFilter}\r\n            onColumnConfigChange={handleColumnConfigChange} columnModel={columnModel}\r\n            onAddClick={handleClickOpen} />\r\n        {/* <TemplateAdd /> */}\r\n    </div>\r\n\r\n}\r\nTemplateToolbar.propTypes = {\r\n    onAddClick: PropTypes.func,\r\n}\r\nexport default TemplateToolbar","import React, { useEffect, useState } from \"react\"\r\nimport GridData from \"components/table/GridData\"\r\nimport ButtonIcon from \"components/button/ButtonIcon\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport ConfirmDeleteDialog from \"components/popup/confirmDeleteDialog\"\r\nimport { baseUrl } from \"configs\"\r\nimport { open as openAlert } from \"stores/components/alert-dialog\"\r\nimport { formatDate } from \"helpers/commonFunction\"\r\nimport { LinkControl } from 'components/link'\r\n\r\n\r\nconst TemplateGrid = React.memo((props) => {\r\n    console.log(\"render TemplateGrid\")\r\n    const { filterModels } = props\r\n    const dispatch = useDispatch()\r\n    const { t } = useTranslation()\r\n    const columnVisibility = { ...useSelector((state) => state.template.columnVisibility) }\r\n    const [id, setId] = useState(null)\r\n    const loading = useSelector((state) => state.master.loading)\r\n\r\n    const [column, setColumn] = useState([\r\n        {\r\n            checkboxSelection: true,\r\n            resizable: false, width: 40, headerCheckboxSelection: true, pinned: 'left'\r\n        },\r\n        {\r\n            field: \"name\",\r\n            headerName: t(\"Tên mẫu\"),\r\n            pinned: 'left',\r\n            flex: 1,\r\n            cellRenderer: (params) => {\r\n                return <LinkControl\r\n                    href={`/template/${params.data.id}`}\r\n                    title={params.data.name} >\r\n                </LinkControl >\r\n            },\r\n        },\r\n        {\r\n            field: \"description\", headerName: t(\"Mô tả\"),\r\n            flex: 1\r\n        },\r\n        {\r\n            field: \"createdDate\",\r\n            suppressAutoSize: true,\r\n            headerName: t(\"Ngày tạo\"),\r\n            cellRenderer: (params) => {\r\n                return formatDate(params.data.createdDate)\r\n            },\r\n        },\r\n        {\r\n            field: \"edit\",\r\n            headerName: \"\",\r\n            suppressAutoSize: true,\r\n            resizable: false,\r\n            cellRenderer: (params) => {\r\n                const onDeleteClick = (e) => {\r\n                    setId(params.data.id)\r\n                    dispatch(openAlert({ open: true }))\r\n                }\r\n\r\n                const _status = params.data.status\r\n                const _isMainAccount = params.data.isMainAccount\r\n\r\n                const deleteElement = (\r\n                    <ButtonIcon\r\n                        disabled={_isMainAccount}\r\n                        onClick={onDeleteClick}\r\n                        type=\"Delete\"\r\n                    ></ButtonIcon>\r\n                )\r\n\r\n                return React.createElement(\r\n                    \"div\",\r\n                    {},\r\n                    deleteElement,\r\n                )\r\n            },\r\n            sortable: false,\r\n        },\r\n    ])\r\n\r\n    return (\r\n        <div style={{ width: \"100%\" }}>\r\n            <ConfirmDeleteDialog url={baseUrl.jm_template} id={id} />\r\n            <GridData\r\n                filterModels={filterModels}\r\n                url={baseUrl.jm_template}\r\n                columnVisibility={columnVisibility}\r\n                loading={loading}\r\n                columns={column}\r\n            ></GridData>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default TemplateGrid\r\n","import React, { useState, useEffect, useCallback } from \"react\"\r\nimport TemplateToolbar from \"./TemplateToolbar\"\r\nimport TemplateGrid from \"./templateGrid\"\r\nimport { Resizable } from 'components/resizable'\r\n\r\n\r\nconst Template = React.memo(() => {\r\n  console.log(\"render Template\")\r\n  const [filterModels, setFilterModels] = useState(null)\r\n\r\n  const onApplyFilter = (value) => {\r\n    setFilterModels(value)\r\n  }\r\n\r\n  const genderLeftComponent = () => {\r\n    return <TemplateGrid filterModels={filterModels} />\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <TemplateToolbar onApplyFilter={onApplyFilter} />\r\n      <Resizable genderLeftComponent={genderLeftComponent} />\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default Template\r\n","const defaultSize = \"fa-sm\"\r\nconst IconSave = ({ className }) => {\r\n  return <i className=\"far fa-save fa-sm\"></i>\r\n}\r\nconst IconDelete = ({ style, size, onClick, className = '' }) => {\r\n  return <i style={style} onClick={onClick} className={`far fa-trash-alt fa-sm ${className}`}></i>\r\n}\r\nconst IconEdit = ({ className }) => {\r\n  return <i className={`far fa-edit fa-sm ${className}`}></i>\r\n}\r\nconst IconCancel = ({ style, className }) => {\r\n  return <i style={style} className=\"far fa-ban fa-sm\"></i>\r\n}\r\nconst IconEmail = ({ style, className }) => {\r\n  return <i className={`far fa-envelope fa-sm ${className || ''}`}></i>\r\n}\r\nconst IconActive = ({ style, className }) => {\r\n  return <i className={`far fa-check fa-sm ${className || ''}`}></i>\r\n}\r\nconst IconBlock = ({ style, className }) => {\r\n  return <i className={`far fa-lock-alt fa-sm ${className || ''}`}></i>\r\n}\r\nconst IconUnBlock = ({ style, className }) => {\r\n  return <i className=\"far fa-unlock-alt fa-sm\"></i>\r\n}\r\nconst IconClean = ({ style, className }) => {\r\n  return <i className=\"far fa-undo fa-sm\"></i>\r\n}\r\nconst IconApply = ({ style, className }) => {\r\n  return <i style={style} className=\"far fa-check fa-sm\"></i>\r\n}\r\nconst IconBack = ({ style, className }) => {\r\n  return <i style={style} className=\"fas fa-arrow-left fa-sm\"></i>\r\n}\r\nconst IconMore = ({ style, className }) => {\r\n  return <i style={style} className=\"fas fa-ellipsis-h fa-sm\"></i>\r\n}\r\nconst IconAdd = ({ style, className }) => {\r\n  return <i style={style} className=\"far fa-plus fa-sm\"></i>\r\n}\r\nconst IconCricle = ({ style, className }) => {\r\n  return <i style={style} className=\"fas fa-circle fa-xs\"></i>\r\n}\r\nconst IconUp = ({ style, className }) => {\r\n  return <i style={style} className=\"far fa-arrow-up fa-sm\"></i>\r\n}\r\nconst IconDown = ({ style, className }) => {\r\n  return <i style={style} className=\"far fa-arrow-down fa-sm\"></i>\r\n}\r\nconst IconExpand = ({ style, className }) => {\r\n  return <i style={style} className=\"far fa-angle-down fa-sm\"></i>\r\n}\r\nconst IconRemove = ({ style, className }) => {\r\n  return <i style={style} className={`fa-regular fa-xmark fa-sm ${className}`}></i>\r\n}\r\nconst IconUpload = ({ style, className }) => {\r\n  return <i style={style} className=\"far fa-upload fa-sm\"></i>\r\n}\r\nconst IconChange = ({ style, className }) => {\r\n  return <i style={style} className=\"far fa-exchange fa-sm\"></i>\r\n}\r\nconst IconCopy = ({ style, className }) => {\r\n  return <i style={style} className=\"far fa-copy fa-sm\"></i>\r\n}\r\nconst IconComment = ({ style, className }) => {\r\n  return <i style={style} className=\"far fa-comment-alt fa-sm\"></i>\r\n}\r\nexport {\r\n  IconSave, IconDelete, IconEdit, IconCancel, IconEmail, IconActive, IconBlock,\r\n  IconUnBlock, IconClean, IconApply, IconBack, IconMore, IconAdd, IconCricle, IconUp,\r\n  IconDown, IconExpand, IconRemove, IconUpload, IconChange, IconCopy, IconComment\r\n}\r\n","import React from \"react\"\r\nimport Typography from '@mui/material/Typography'\r\n\r\nconst LabelControl = (props) => {\r\n    const { label, required = false, className } = props\r\n    return <Typography className={`label-title ${className}`}>{label}{required ? <span style={{ color: 'red' }}>*</span> : ''}</Typography>\r\n}\r\n\r\nexport default LabelControl","import axios from 'axios';\r\nimport httpStatus from 'http-status';\r\nimport { getAccessToken, setRefreshTokenSucceeded, resetRefreshTokenFailure } from './../helpers';\r\n\r\nimport queryString from 'query-string';\r\nexport const createInstance = () => {\r\n    // const { origin } = window && window.location;\r\n    const instance = axios.create({\r\n        baseURL: `${process.env.REACT_APP_API_URL}/api`,\r\n        headers: {\r\n            'content-type': 'application/json',\r\n        },\r\n        paramsSerializer: params => queryString.stringify(params),\r\n    });\r\n\r\n    instance.interceptors.request.use(request => {\r\n        const token = getAccessToken();\r\n        request.headers.Authorization = `Bearer ${token}`;\r\n        return request;\r\n    });\r\n\r\n    instance.interceptors.response.use(\r\n        response => {\r\n            if (response.status === httpStatus[200]) {\r\n                if (response.data.status === httpStatus[200]) {\r\n\r\n                }\r\n                else {\r\n\r\n                }\r\n            }\r\n            return response.data;\r\n        },\r\n        async error => {\r\n            const originalRequest = error.config;\r\n            if (error.response.status === httpStatus.UNAUTHORIZED && !originalRequest._retry) {\r\n                // not working well\r\n                // originalRequest._retry = true;\r\n                // return refreshTokenAndRecallRequest(originalRequest);\r\n                // log out \r\n                resetRefreshTokenFailure();\r\n                //window.location.reload();\r\n            }\r\n            return Promise.reject(error);\r\n        },\r\n    );\r\n\r\n    return instance;\r\n};\r\n","import axios from 'axios';\r\nimport { createInstance } from '../base';\r\nimport { getRefreshToken, getUserInfo, resetRefreshTokenFailure } from '../../helpers';\r\nconst baseUrl = `${process.env.REACT_APP_API_URL}/api/account`;\r\n\r\nexport const login = async data => {\r\n    try {\r\n        const res = await axios.post(`${baseUrl}/authenticate`, data);\r\n        return res;\r\n    } catch (error) {\r\n        const { request, response } = error;\r\n        if (request) {\r\n            return request;\r\n        }\r\n        if (response) {\r\n            return response;\r\n        }\r\n        return error;\r\n    }\r\n};\r\n\r\nexport const loginGoogle = async data => {\r\n    try {\r\n        const res = await axios.post(`${baseUrl}/login-google`, data);\r\n        return res;\r\n    } catch (error) {\r\n        const { request, response } = error;\r\n        if (request) {\r\n            return request;\r\n        }\r\n        if (response) {\r\n            return response;\r\n        }\r\n        return error;\r\n    }\r\n};\r\n\r\nexport const registerGoogle = async (param) => {\r\n    try {\r\n      const query = `${baseUrl}/register-google`;\r\n      const res = await axios.post(query, param);\r\n      return res;\r\n    } catch (error) {\r\n      const { request, response } = error;\r\n      if (request) {\r\n        return request;\r\n      }\r\n      if (response) {\r\n        return response;\r\n      }\r\n      return error;\r\n    }\r\n  };","import { createInstance, handleError } from \"../../base\";\r\nimport { buildQueryString } from \"helpers\";\r\nconst baseUrl = \"/jm_team\";\r\n\r\nconst services = createInstance(\"/api\");\r\nexport const getTeam = async (param) => {\r\n  try {\r\n    let query = `${baseUrl}`;\r\n    if (param) {\r\n      query += buildQueryString(param);\r\n    }\r\n    const res = await services.get(query);\r\n    return res;\r\n  } catch (error) {\r\n    const { request, response } = error;\r\n    if (request) {\r\n      return request;\r\n    }\r\n    if (response) {\r\n      return response;\r\n    }\r\n    return error;\r\n  }\r\n};\r\nexport const getTeamByID = async (id) => {\r\n  try {\r\n    let query = `${baseUrl}/${id}`;\r\n    const res = await services.get(query);\r\n    return res;\r\n  } catch (error) {\r\n    const { request, response } = error;\r\n    if (request) {\r\n      return request;\r\n    }\r\n    if (response) {\r\n      return response;\r\n    }\r\n    return error;\r\n  }\r\n};\r\nexport const saveTeam = async (param) => {\r\n  try {\r\n    const query = `${baseUrl}`;\r\n    if (!param.id) {\r\n      const res = await services.post(query, param);\r\n      return res;\r\n    } else {\r\n      const res = await services.put(`${baseUrl}/${param.id}`, param);\r\n      return res;\r\n    }\r\n  } catch (error) {\r\n    const { request, response } = error;\r\n    if (request) {\r\n      return request;\r\n    }\r\n    if (response) {\r\n      return response;\r\n    }\r\n    return error;\r\n  }\r\n};\r\nexport const deleteTeam = async (id) => {\r\n  try {\r\n    let query = `${baseUrl}/${id}`;\r\n    const res = await services.delete(query);\r\n    return res;\r\n  } catch (error) {\r\n    const { request, response } = error;\r\n    if (request) {\r\n      return request;\r\n    }\r\n    if (response) {\r\n      return response;\r\n    }\r\n    return error;\r\n  }\r\n};\r\n","import { createInstance, handleError } from '../../base';\r\nconst baseUrl = '/cf_area';\r\nconst services = createInstance('/api');\r\nexport const getArea = async param => {\r\n    try {\r\n        const query = `${baseUrl}/GetAllData`;\r\n        const res = await services.post(query, param);\r\n        return res;\r\n    }\r\n    catch (error) {\r\n        const { request, response } = error;\r\n        if (request) {\r\n            return request;\r\n        }\r\n        if (response) {\r\n            return response;\r\n        }\r\n        return error;\r\n    }\r\n};\r\nexport const postArea = async param => {\r\n    try {\r\n        const query = `${baseUrl}`;\r\n        const res = await services.post(query, param);\r\n        return res;\r\n    }\r\n    catch (error) {\r\n        const { request, response } = error;\r\n        if (request) {\r\n            return request;\r\n        }\r\n        if (response) {\r\n            return response;\r\n        }\r\n        return error;\r\n    }\r\n};","import { createInstance, handleError } from \"services/base\"\r\nimport { buildQueryString } from \"helpers\"\r\nconst baseUrl = \"/jm_user\"\r\n\r\nconst services = createInstance(\"/api\")\r\nexport const getUser = async (param) => {\r\n  try {\r\n    let query = `${baseUrl}`\r\n    if (param) {\r\n      query += buildQueryString(param)\r\n    }\r\n    const res = await services.get(query)\r\n    return res\r\n  } catch (error) {\r\n    const { request, response } = error\r\n    if (request) {\r\n      return request\r\n    }\r\n    if (response) {\r\n      return response\r\n    }\r\n    return error\r\n  }\r\n}\r\nexport const getTeamByID = async (id) => {\r\n  try {\r\n    let query = `${baseUrl}/${id}`\r\n    const res = await services.get(query)\r\n    return res\r\n  } catch (error) {\r\n    const { request, response } = error\r\n    if (request) {\r\n      return request\r\n    }\r\n    if (response) {\r\n      return response\r\n    }\r\n    return error\r\n  }\r\n}\r\nexport const saveUser = async (param) => {\r\n  try {\r\n    const query = `${baseUrl}`\r\n    if (!param.id) {\r\n      const res = await services.post(query, param)\r\n      return res\r\n    } else {\r\n      const res = await services.put(`${baseUrl}/${param.id}`, param)\r\n      return res\r\n    }\r\n  } catch (error) {\r\n    const { request, response } = error\r\n    if (request) {\r\n      return request\r\n    }\r\n    if (response) {\r\n      return response\r\n    }\r\n    return error\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const updateUserStatus = async (param) => {\r\n  try {\r\n    const query = `${baseUrl}/status`\r\n    const res = await services.put(query, param)\r\n    return res\r\n  } catch (error) {\r\n    const { request, response } = error\r\n    if (request) {\r\n      return request\r\n    }\r\n    if (response) {\r\n      return response\r\n    }\r\n    return error\r\n  }\r\n}\r\nexport const signup = async (param) => {\r\n  try {\r\n    const query = `${baseUrl}/signup`\r\n    const res = await services.post(query, param)\r\n    return res\r\n  } catch (error) {\r\n    const { request, response } = error\r\n    if (request) {\r\n      return request\r\n    }\r\n    if (response) {\r\n      return response\r\n    }\r\n    return error\r\n  }\r\n}\r\nexport const deleteUser = async (id) => {\r\n  try {\r\n    let query = `${baseUrl}/${id}`\r\n    const res = await services.delete(query)\r\n    return res\r\n  } catch (error) {\r\n    const { request, response } = error\r\n    if (request) {\r\n      return request\r\n    }\r\n    if (response) {\r\n      return response\r\n    }\r\n    return error\r\n  }\r\n}\r\nexport const sendMailUser = async (param) => {\r\n  try {\r\n    const query = `${baseUrl}/add-user`\r\n    const res = await services.post(query, param)\r\n    return res\r\n  } catch (error) {\r\n    const { request, response } = error\r\n    if (request) {\r\n      return request\r\n    }\r\n    if (response) {\r\n      return response\r\n    }\r\n    return error\r\n  }\r\n}\r\nexport const validateTokenSignup = async (param) => {\r\n  try {\r\n    const query = `${baseUrl}/validate-signup`\r\n    const res = await services.post(query, param)\r\n    return res\r\n  } catch (error) {\r\n    const { request, response } = error\r\n    if (request) {\r\n      return request\r\n    }\r\n    if (response) {\r\n      return response\r\n    }\r\n    return error\r\n  }\r\n}\r\n","import { createInstance, handleError } from \"services/base\";\r\nimport { buildQueryString } from \"helpers\";\r\nconst baseUrl = \"/sys_filter\";\r\n\r\nconst services = createInstance(\"/api\");\r\nexport const saveFilter = async (param) => {\r\n  try {\r\n    const query = `${baseUrl}`;\r\n    if (!param.id) {\r\n      const res = await services.post(query, param);\r\n      return res;\r\n    } else {\r\n      const res = await services.put(`${baseUrl}/${param.id}`, param);\r\n      return res;\r\n    }\r\n  } catch (error) {\r\n    const { request, response } = error;\r\n    if (request) {\r\n      return request;\r\n    }\r\n    if (response) {\r\n      return response;\r\n    }\r\n    return error;\r\n  }\r\n};","import { createInstance, handleError } from \"services/base\"\r\nimport { buildQueryString } from \"helpers\"\r\nimport _ from 'lodash'\r\n\r\nconst services = createInstance(\"/api\")\r\n\r\nexport const save = async (baseUrl, param) => {\r\n  try {\r\n    const query = `${baseUrl}`\r\n    if (_.isEmpty(param.id)) {\r\n      const res = await services.post(query, param)\r\n      return res\r\n    } else {\r\n      const res = await services.put(`${baseUrl}/${param.id}`, param)\r\n      return res\r\n    }\r\n  } catch (error) {\r\n    const { request, response } = error\r\n    if (request) {\r\n      return request\r\n    }\r\n    if (response) {\r\n      return response\r\n    }\r\n    return error\r\n  }\r\n}\r\n\r\nexport const get = async (baseUrl, param = null) => {\r\n  try {\r\n    let query = `${baseUrl}`\r\n    if (param) {\r\n      query += buildQueryString(param)\r\n    }\r\n    const res = await services.get(query)\r\n    return res\r\n  } catch (error) {\r\n    const { request, response } = error\r\n    if (request) {\r\n      return request\r\n    }\r\n    if (response) {\r\n      return response\r\n    }\r\n    return error\r\n  }\r\n}\r\n\r\nexport const getByID = async (baseUrl, id) => {\r\n  try {\r\n    let query = `${baseUrl}/${id}`\r\n    const res = await services.get(query)\r\n    return res\r\n  } catch (error) {\r\n    const { request, response } = error\r\n    if (request) {\r\n      return request\r\n    }\r\n    if (response) {\r\n      return response\r\n    }\r\n    return error\r\n  }\r\n}\r\n\r\nexport const deleteData = async (baseUrl, id) => {\r\n  try {\r\n    let query = `${baseUrl}/${id}`;\r\n    const res = await services.delete(query);\r\n    return res;\r\n  } catch (error) {\r\n    const { request, response } = error;\r\n    if (request) {\r\n      return request;\r\n    }\r\n    if (response) {\r\n      return response;\r\n    }\r\n    return error;\r\n  }\r\n}\r\n\r\nexport const post = async (baseUrl, param) => {\r\n  try {\r\n    const query = `${baseUrl}`\r\n    const res = await services.post(query, param)\r\n    return res\r\n  } catch (error) {\r\n    const { request, response } = error\r\n    if (request) {\r\n      return request\r\n    }\r\n    if (response) {\r\n      return response\r\n    }\r\n    return error\r\n  }\r\n}","import React, { useState, useEffect, useStateIfMounted } from \"react\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport PropTypes from \"prop-types\"\r\nimport Tooltip from \"@mui/material/Tooltip\"\r\nimport IconButton from \"@mui/material/IconButton\"\r\nimport { makeStyles } from '@mui/styles'\r\nimport { EButtonIconType, ESize } from \"configs\"\r\nimport { IconDelete } from \"components/icon/icon\"\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\"\r\nimport {\r\n  IconEdit,\r\n  IconEmail,\r\n  IconBlock,\r\n  IconUnBlock,\r\n  IconApply,\r\n  IconCancel,\r\n  IconBack,\r\n  IconMore,\r\n  IconAdd,\r\n  IconUp,\r\n  IconDown,\r\n  IconUpload,\r\n  IconComment\r\n} from \"components/icon/icon\"\r\nimport { EColor } from 'configs/constants'\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    \"&.Mui-disabled\": {\r\n      pointerEvents: \"auto\"\r\n    }\r\n  },\r\n})\r\n\r\nconst ButtonIcon = (props) => {\r\n  const classes = useStyles()\r\n  const { t } = useTranslation()\r\n  const { type, onClick, title, disabled, color, size, showTooltip = true, style, refs, className ='button-icon' } = props\r\n  const [titleDefault, setTitle] = useState(\"\")\r\n  const theme = createTheme({\r\n    palette: {\r\n      neutral: {\r\n        main: EColor.cancel,\r\n        contrastText: \"#fff\",\r\n      },\r\n      delete: {\r\n        main: \"#e50e0e96\",\r\n        contrastText: \"#fff\",\r\n      },\r\n    },\r\n  })\r\n\r\n  useEffect(() => {\r\n    switch (type) {\r\n      case EButtonIconType.edit:\r\n        setTitle(t(\"Chỉnh sửa\"))\r\n        break\r\n      case EButtonIconType.delete:\r\n        setTitle(t(\"Xóa\"))\r\n        break\r\n      case \"Lock\":\r\n        setTitle(t(\"Khóa\"))\r\n        break\r\n      case \"UnLock\":\r\n        setTitle(t(\"Mở khóa\"))\r\n        break\r\n      case EButtonIconType.apply:\r\n        setTitle(t(\"Xác nhận\"))\r\n        break\r\n      case EButtonIconType.cancel:\r\n        setTitle(t(\"Hủy bỏ\"))\r\n        break\r\n      case EButtonIconType.back:\r\n        setTitle(t(\"Quay về\"))\r\n        break\r\n      case EButtonIconType.add:\r\n        setTitle(t(\"Thêm mới\"))\r\n        break\r\n      case EButtonIconType.up:\r\n        setTitle(t(\"Lên\"))\r\n        break\r\n      case EButtonIconType.down:\r\n        setTitle(t(\"Xuống\"))\r\n        break\r\n      case EButtonIconType.comment:\r\n        setTitle(t(\"Trả lời\"))\r\n        break\r\n      default:\r\n        break\r\n    }\r\n  }, [])\r\n\r\n  let button\r\n  let icon\r\n  let width = 21\r\n  let height = 21\r\n\r\n  const adjustedButtonProps = {\r\n    disabled: disabled,\r\n    component: disabled ? \"div\" : undefined,\r\n    onClick: disabled ? undefined : onClick,\r\n  }\r\n  if (type == \"Edit\")\r\n    icon = <IconEdit style={{ width: width, height: height }} />\r\n  else if (type == \"Delete\")\r\n    icon = <IconDelete style={{ width: width, height: height }} />\r\n  else if (type == \"Email\")\r\n    icon = <IconEmail style={{ width: width, height: height }} />\r\n  else if (type == \"Lock\")\r\n    icon = <IconBlock style={{ width: width, height: height }} />\r\n  else if (type == \"UnLock\")\r\n    icon = <IconUnBlock style={{ width: width, height: height }} />\r\n  else if (type == EButtonIconType.apply)\r\n    icon = <IconApply style={{ width: width, height: height }} />\r\n  else if (type == EButtonIconType.cancel)\r\n    icon = <IconCancel style={{ width: width, height: height }} />\r\n  else if (type == EButtonIconType.back)\r\n    icon = <IconBack style={{ width: width, height: height }} />\r\n  else if (type == EButtonIconType.more)\r\n    icon = <IconMore style={{ width: width, height: height }} />\r\n  else if (type == EButtonIconType.add)\r\n    icon = <IconAdd style={{ width: width, height: height }} />\r\n  else if (type == EButtonIconType.up)\r\n    icon = <IconUp style={{ width: width, height: height }} />\r\n  else if (type == EButtonIconType.down)\r\n    icon = <IconDown style={{ width: width, height: height }} />\r\n  else if (type == EButtonIconType.upload)\r\n    icon = <IconUpload style={{ width: width, height: height }} />\r\n  else if (type == EButtonIconType.comment)\r\n    icon = <IconComment style={{ width: width, height: height }} />\r\n\r\n  button = (\r\n\r\n    <IconButton\r\n      ref={refs}\r\n      style={style}\r\n      color={color}\r\n      size={size}\r\n      className={`${classes.root} ${className}`}\r\n      {...adjustedButtonProps}\r\n      aria-describedby={'mouse-over-popover'}\r\n      >\r\n      {icon}\r\n    </IconButton>\r\n  )\r\n\r\n  return showTooltip ? <ThemeProvider theme={theme}>\r\n    <Tooltip title={title ? title : titleDefault}>{button}</Tooltip>\r\n  </ThemeProvider> : <ThemeProvider theme={theme}>{button}</ThemeProvider>\r\n}\r\nButtonIcon.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n  title: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n  disabled: PropTypes.bool,\r\n  size: PropTypes.string,\r\n  showTooltip: PropTypes.bool\r\n}\r\nButtonIcon.defaultProps = {\r\n  disabled: false,\r\n  size: ESize.medium,\r\n  showTooltip: true\r\n}\r\nexport default ButtonIcon\r\n","import React from \"react\"\r\nimport TextField from \"@mui/material/TextField\"\r\nimport { Controller } from \"react-hook-form\"\r\nimport { useSelector } from \"react-redux\"\r\nimport Skeleton from \"@mui/material/Skeleton\"\r\nimport { _TemplateVariant, EVariant, _ControlSizeDefault } from \"configs\"\r\nimport { LabelControl } from 'components/label'\r\nimport _ from 'lodash'\r\n\r\nexport default function TextInput({\r\n  control,\r\n  required,\r\n  label,\r\n  name,\r\n  autoFocus,\r\n  hidden,\r\n  inputProps,\r\n  type = 'text',\r\n  size,\r\n  disabled,\r\n  variant,\r\n  fullWidth = true,\r\n  multiline,\r\n  defaultValue,\r\n  placeholder,\r\n  focused,\r\n  onChange,\r\n  style,\r\n  className = 'containerControl'\r\n}) {\r\n  const loadingPopup = useSelector((state) => state.master.loadingPopup)\r\n  return (\r\n    <Controller\r\n      render={({ field, fieldState: { error } }) =>\r\n        loadingPopup ? (\r\n          <Skeleton width={\"100%\"}\r\n            size={size ? size : _ControlSizeDefault} variant=\"text\">\r\n            <TextField\r\n              {...field}\r\n              fullWidth={fullWidth || false}\r\n              type={type || \"text\"}\r\n              inputProps={inputProps}\r\n              required={required}\r\n              variant={variant || EVariant.outlined}\r\n              error={!!error}\r\n              name={name}\r\n              value={field.value || defaultValue || ''}\r\n              multiline={multiline}\r\n              rows={multiline ? 2 : 1}\r\n              maxRows={multiline ? 4 : 1}\r\n              size={size ? size : _ControlSizeDefault}\r\n              helperText={error?.message}\r\n              label={_TemplateVariant === EVariant.outlined ? label : ''}\r\n              disabled={disabled ? disabled : false}\r\n              autoComplete=\"new-password\"\r\n              hidden={hidden ? true : false}\r\n              onChange={(e) => {\r\n                field.onChange(e.target.value)\r\n              }}\r\n              autoFocus={focused}\r\n            />\r\n          </Skeleton>\r\n        ) : (\r\n          <div className={className}>\r\n            {_TemplateVariant === EVariant.normal ? (label ? <LabelControl required={required} label={label} /> : '') : ''}\r\n            <TextField\r\n              {...field}\r\n              fullWidth={fullWidth || false}\r\n              type={type || \"text\"}\r\n              inputProps={inputProps}\r\n              required={required}\r\n              variant={variant || EVariant.outlined}\r\n              error={!!error}\r\n              name={name}\r\n              style={style}\r\n              focused={focused}\r\n              placeholder={placeholder}\r\n              value={field.value || defaultValue || ''}\r\n              multiline={multiline}\r\n              rows={multiline ? 2 : 1}\r\n              maxRows={multiline ? 4 : 1}\r\n              size={size ? size : _ControlSizeDefault}\r\n              helperText={error?.message}\r\n              label={_TemplateVariant === EVariant.outlined ? label : ''}\r\n              disabled={disabled ? disabled : false}\r\n              autoComplete=\"new-password\"\r\n              hidden={hidden ? true : false}\r\n              onChange={(e) => {\r\n                let valueChange = e.target.value\r\n                if (type === 'number') {\r\n                  if (!_.isEmpty(valueChange)) {\r\n                    valueChange = parseFloat(valueChange)\r\n                  } else {\r\n                    valueChange = null\r\n                  }\r\n                }\r\n                field.onChange(valueChange)\r\n                onChange && onChange(valueChange)\r\n              }}\r\n              sx={{\r\n                \"& .MuiInputBase-input\": {\r\n                  overflow: \"hidden\",\r\n                  textOverflow: \"ellipsis\"\r\n                }\r\n              }}\r\n              autoFocus={autoFocus}\r\n            />\r\n          </div>\r\n        )\r\n      }\r\n      name={name}\r\n      control={control && control}\r\n    />\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport Button from '@mui/material/Button'\r\nimport { useTranslation } from 'react-i18next'\r\nimport PropTypes from 'prop-types'\r\nimport { EButtonType, EColor } from 'configs/constants'\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\"\r\nimport Tooltip from \"@mui/material/Tooltip\"\r\nimport ClickAwayListener from '@mui/material/ClickAwayListener'\r\nimport Box from '@mui/material/Box'\r\nimport _ from 'lodash'\r\n\r\nconst useStyles = props => makeStyles(theme => ({\r\n    button: {\r\n        marginLeft: theme.spacing(props.spacingLeft || 0),\r\n        // marginTop: theme.spacing(1),\r\n        // marginBottom: theme.spacing(1),\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            minWidth: 32,\r\n            paddingLeft: 8,\r\n            paddingRight: 8,\r\n            \"& .MuiButton-startIcon\": {\r\n                margin: 0,\r\n            },\r\n            \"& .MuiButton-endIcon\": {\r\n                margin: 0\r\n            }\r\n        },\r\n        \"& .MuiButton-startIcon>*:nth-of-type(1)\": {\r\n            fontSize: \"1rem\"\r\n        },\r\n        \"& .MuiButton-endIcon>*:nth-of-type(1)\": {\r\n            fontSize: \"1rem\"\r\n        }\r\n    },\r\n    buttonIcon: {\r\n        marginLeft: theme.spacing(props.spacingLeft || 0),\r\n        // marginTop: theme.spacing(1),\r\n        // marginBottom: theme.spacing(1),\r\n        minWidth: 32,\r\n        padding: '11px 10px',\r\n        margin: '0px !important',\r\n        \"& .MuiButton-startIcon\": {\r\n            margin: 0,\r\n        },\r\n        \"& .MuiButton-endIcon\": {\r\n            margin: 0\r\n        },\r\n        \"& .MuiButton-startIcon>*:nth-of-type(1)\": {\r\n            fontSize: \"1rem\"\r\n        },\r\n        \"& .MuiButton-endIcon>*:nth-of-type(1)\": {\r\n            fontSize: \"1rem\"\r\n        }\r\n    },\r\n    buttonIconText: {\r\n        display: \"none\"\r\n    },\r\n    buttonText: {\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            display: \"none\"\r\n        }\r\n    }\r\n}))\r\nconst ButtonFuntion = React.memo(props => {\r\n    const classes = useStyles(props)()\r\n    const { t } = useTranslation()\r\n    const { type, onClick, visible = true, open,\r\n        label = '', style, refs, endIcon, onClickAway = null, isFloatLeft = false, className, disabled } = props\r\n    const [icon, setIcon] = useState('')\r\n    const [text, setText] = useState('')\r\n    const [float, setFloat] = useState(isFloatLeft ? ' float-left' : ' float-right')\r\n    const [startIcon, setStartIcon] = useState(true)\r\n    const [color, setColor] = useState(null)\r\n    const [isButtonIcon, setIsButtonIcon] = useState(true)\r\n    const theme = createTheme({\r\n        palette: {\r\n            neutral: {\r\n                main: EColor.cancel,\r\n                contrastText: \"#fff\",\r\n            },\r\n        },\r\n    })\r\n    const sizeDefault = \" fa-xs\"\r\n    const setButton = () => {\r\n        switch (type) {\r\n            case EButtonType.add:\r\n                setIcon('far fa-plus' + sizeDefault)\r\n                setText(t('Thêm mới'))\r\n                break\r\n            case EButtonType.save:\r\n                setIcon('far fa-save' + sizeDefault)\r\n                setText(t('Lưu'))\r\n                setFloat(' float-left')\r\n                break\r\n            case EButtonType.addFilter:\r\n                setIcon('far fa-plus' + sizeDefault)\r\n                setText(t('Thêm điều kiện lọc'))\r\n                setFloat(' float-left')\r\n                break\r\n            case EButtonType.delete:\r\n                setIcon('fas fa-trash-alt' + sizeDefault)\r\n                setText(t('Xóa'))\r\n                break\r\n            case EButtonType.columnConfig:\r\n                setIcon('far fa-line-columns' + sizeDefault)\r\n                setText(t('Ẩn / hiện cột'))\r\n                setFloat(' float-left')\r\n                break\r\n            case EButtonType.filter:\r\n                if (open && open)\r\n                    setIcon(\"far fa-angle-up\" + sizeDefault)\r\n                else\r\n                    setIcon(\"far fa-angle-down\" + sizeDefault)\r\n                setText(t('Tìm kiếm'))\r\n                setFloat(' float-left')\r\n                setStartIcon(false)\r\n                break\r\n            case EButtonType.clearFilter:\r\n                setIcon('far fa-undo' + sizeDefault)\r\n                setText(t('Xóa hết'))\r\n                setFloat(' float-left')\r\n                setColor(\"neutral\")\r\n                break\r\n            case EButtonType.function:\r\n                setIcon('far fa-angle-down' + sizeDefault)\r\n                setText(t('Thao tác'))\r\n                setFloat(' float-left')\r\n                break\r\n            case EButtonType.apply:\r\n                setIcon('far fa-check' + sizeDefault)\r\n                setText(t('Áp dụng'))\r\n                setFloat(' float-left')\r\n                break\r\n            case EButtonType.refresh:\r\n                setIcon('far fa-sync-alt' + sizeDefault)\r\n                setFloat(' float-left')\r\n                setText(t('Tải lại'))\r\n                break\r\n            case EButtonType.addTag:\r\n                setIcon('far fa-tags' + sizeDefault)\r\n                setFloat(' float-left')\r\n                setText(t('Thêm nhãn'))\r\n                setIsButtonIcon(false)\r\n                break\r\n            case EButtonType.more:\r\n                setIcon('far fa-ellipsis-h' + sizeDefault)\r\n                setText(t('Chức năng'))\r\n                setIsButtonIcon(false)\r\n                setFloat(' float-left')\r\n                break\r\n            case EButtonType.comment:\r\n                setIcon('far fa-comment-alt' + sizeDefault)\r\n                setText(t('Bình luận'))\r\n                break\r\n            case EButtonType.reply:\r\n                setIcon('far fa-reply' + sizeDefault)\r\n                setText(t('Trả lời'))\r\n                break\r\n            case EButtonType.cancel:\r\n                setIcon('far fa-times' + sizeDefault)\r\n                setText(t('Hủy'))\r\n                setFloat(' float-left')\r\n                setColor(\"neutral\")\r\n                break\r\n            default:\r\n                break\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        setButton()\r\n    }, [open])\r\n    let button = <Button\r\n        ref={refs}\r\n        variant=\"outlined\"\r\n        color={color != null ? color : \"primary\"}\r\n        size=\"medium\"\r\n        style={style}\r\n        disabled={disabled}\r\n        onClick={onClick}\r\n        disableTouchRipple\r\n        className={`${isButtonIcon ? classes.button : classes.buttonIcon} ${float} ${className}`}\r\n        startIcon={startIcon ? <i className={icon} /> : ''}\r\n        endIcon={endIcon ? endIcon : (!startIcon ? <i className={icon} /> : '')}\r\n    >\r\n        <span className={isButtonIcon ? classes.buttonText : classes.buttonIconText}>{label ? label : text}</span>\r\n    </Button>\r\n    if (visible) {\r\n        button = (\r\n            <ThemeProvider theme={theme}>\r\n                {!isButtonIcon ? <Tooltip title={label ? label : text}>\r\n                    {button}\r\n                </Tooltip> : button}\r\n            </ThemeProvider>\r\n        )\r\n    }\r\n    else\r\n        button = ''\r\n    return !_.isNil(onClickAway) ? <ClickAwayListener onClickAway={onClickAway}>\r\n        <Box sx={{ position: 'relative' }}> {button} </Box>\r\n    </ClickAwayListener> : button\r\n})\r\nButtonFuntion.propTypes = {\r\n    type: PropTypes.string.isRequired,\r\n    onClick: PropTypes.func,\r\n    visible: PropTypes.bool,\r\n    spacingLeft: PropTypes.number,\r\n    open3: PropTypes.bool,\r\n}\r\nexport default ButtonFuntion\r\n","import React, { useState, useEffect } from \"react\"\r\nimport Autocomplete, { createFilterOptions } from \"@mui/material/Autocomplete\"\r\nimport TextField from \"@mui/material/TextField\"\r\nimport { Controller } from \"react-hook-form\"\r\nimport Skeleton from \"@mui/material/Skeleton\"\r\nimport { useSelector } from \"react-redux\"\r\nimport Typography from '@mui/material/Typography'\r\nimport Box from '@mui/material/Box'\r\nimport { ChipControl } from \"components/chip\"\r\nimport { _TemplateVariant, EVariant, _ControlSizeDefault } from 'configs'\r\nimport { useTranslation } from \"react-i18next\"\r\nimport { LabelControl } from 'components/label'\r\nimport { v4 as uuidv4 } from 'uuid'\r\n\r\nconst filter = createFilterOptions()\r\n\r\nconst SingleAddSelect = React.memo(\r\n  (props) => {\r\n    const { control, field, required, data = [], label, name, onSelectChange,\r\n      size, disabled, fullWidth, renderOption, renderTags, renderInput,\r\n      disableClearable = false, freeSolo = false, placeholder, width = '100%', isAddWhenNoOption = true,\r\n      onInputChange } = props\r\n    const loadingPopup = useSelector((state) => state.master.loadingPopup)\r\n    const { t } = useTranslation()\r\n\r\n    return (\r\n      <Controller\r\n        name={name}\r\n        render={({ field, fieldState: { error } }) =>\r\n          loadingPopup ? (\r\n            <Skeleton width={\"100%\"} variant=\"text\">\r\n              <Autocomplete\r\n                options={data}\r\n                size={size ? size : _ControlSizeDefault}\r\n                disabled={disabled}\r\n                fullWidth={fullWidth || false}\r\n                isOptionEqualToValue={(option, value) => option != null && value != null ? option.id === value.id : \"\"}\r\n                getOptionLabel={(option) => option.name}\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    required={required}\r\n                    error={!!error}\r\n                    helperText={error?.message}\r\n                    label={label}\r\n                    size={size ? size : _ControlSizeDefault}\r\n                    variant=\"outlined\"\r\n                  />\r\n                )}\r\n              />\r\n            </Skeleton>\r\n          ) : (\r\n            <div className=\"containerControl\">\r\n              {_TemplateVariant === EVariant.normal ? (label ? <LabelControl required={required} label={label} /> : '') : ''}\r\n              <Autocomplete\r\n                // {...field}\r\n                options={data}\r\n                size={size ? size : _ControlSizeDefault}\r\n                disabled={disabled}\r\n                freeSolo={freeSolo}\r\n                fullWidth={fullWidth || true}\r\n                value={field.value != null ? field.value : null}\r\n                disableClearable={disableClearable}\r\n                selectOnFocus\r\n                autoHighlight={true}\r\n                handleHomeEndKeys\r\n                isOptionEqualToValue={(option, value) => option.id === value || null}\r\n                getOptionLabel={(option) => {\r\n                  if (option.value) {\r\n                    return option.value\r\n                  }\r\n                  if (option.name) {\r\n                    return option.name\r\n                  } else {\r\n                    const item = data.find((x) => { return x.id === option })\r\n                    if (item) {\r\n                      return item.name\r\n                    }\r\n                    return freeSolo ? option : ''\r\n                  }\r\n                }}\r\n                filterOptions={(options, params) => {\r\n                  const filtered = filter(options, params)\r\n                  if (isAddWhenNoOption && params.inputValue !== '' && (!filtered || filtered.length == 0)) {\r\n                    filtered.push({\r\n                      id: uuidv4(),\r\n                      name: `${t('Thêm')} \"${params.inputValue}\"`,\r\n                      value: params.inputValue,\r\n                      isAddNew: true\r\n                    })\r\n                  }\r\n                  return filtered\r\n                }}\r\n                onChange={(event, value) => {\r\n                  let newValue = value\r\n                  if (newValue && newValue.isAddNew) {\r\n                    newValue = { id: uuidv4(), name: value.value, isAddNew: true }\r\n                  } else {\r\n                    newValue = newValue && newValue.id\r\n                  }\r\n                  field.onChange(newValue)\r\n                  onSelectChange && onSelectChange(newValue)\r\n                }}\r\n                onInputChange={onInputChange}\r\n                renderOption={(props, option) => {\r\n                  return renderOption ? renderOption(props, option) : (<Box component=\"li\" sx={{ '& > img': { mr: 2, flexShrink: 0 } }} {...props} key={option.id}>\r\n                    <Typography key={option.id}>{option.name}</Typography>\r\n                  </Box>)\r\n                }}\r\n                renderTags={(value, getTagProps) =>\r\n                  value.map((option, index) => {\r\n                    return renderTags ? renderTags(option, { ...getTagProps({ index }) })\r\n                      : <ChipControl label={option.name} {...getTagProps({ index })} />\r\n                  })\r\n                }\r\n                renderInput={(params) => {\r\n                  return renderInput ? renderInput({ ...props }, { ...params }) :\r\n                    <TextField\r\n                      {...params}\r\n                      required={required}\r\n                      error={!!error}\r\n                      placeholder={placeholder}\r\n                      helperText={error?.message}\r\n                      fullWidth={fullWidth || true}\r\n                      style={{ width: width }}\r\n                      size={size ? size : _ControlSizeDefault}\r\n                      label={_TemplateVariant === EVariant.outlined ? label : ''}\r\n                      variant=\"outlined\"\r\n                    />\r\n                }}\r\n              />\r\n            </div>\r\n          )\r\n        }\r\n        control={control}\r\n      />\r\n    )\r\n  }\r\n)\r\n\r\nexport default SingleAddSelect\r\n","import React from \"react\"\r\nimport Popover from '@mui/material/Popover'\r\nimport PropTypes from \"prop-types\"\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  popover: {\r\n    pointerEvents: 'none',\r\n  },\r\n  popoverContent: {\r\n    pointerEvents: 'auto',\r\n  },\r\n}))\r\n\r\nconst PopoverControl = (props) => {\r\n  const { anchorEl, onClose, genderBody, anchorOrigin, transformOrigin, isHideWhenWithOutFocus = true,className } = props\r\n  const classes = useStyles();\r\n  const open = Boolean(anchorEl)\r\n  const id = open ? 'mouse-over-popover' : undefined\r\n\r\n  const onClick = (e) => {\r\n    e.stopPropagation()\r\n  }\r\n\r\n  return (\r\n    <Popover\r\n      id={id}\r\n      open={open}\r\n      anchorEl={anchorEl}\r\n      onClick={onClick}\r\n      anchorOrigin={anchorOrigin}\r\n      transformOrigin={transformOrigin}\r\n      onClose={onClose}\r\n      className={`${isHideWhenWithOutFocus ? classes.popover : ''} ${className}`}\r\n      classes={isHideWhenWithOutFocus ? {\r\n        paper: classes.popoverContent,\r\n      } : {}}\r\n    >\r\n      {genderBody && genderBody()}\r\n    </Popover>\r\n  )\r\n}\r\nPopoverControl.propTypes = {\r\n  anchorOrigin: PropTypes.object\r\n}\r\nPopoverControl.defaultProps = {\r\n  anchorOrigin: {\r\n    vertical: 'bottom',\r\n    horizontal: 'left',\r\n  },\r\n  transformOrigin: {\r\n    vertical: 'top',\r\n    horizontal: 'left',\r\n  }\r\n}\r\nexport default PopoverControl","import React from \"react\"\r\nimport TextInput from './TextInput'\r\n\r\nconst NumberInput = (props) => {\r\n\r\n    return (\r\n        <TextInput {...props} type={'number'} />\r\n    )\r\n}\r\n\r\nexport default NumberInput","import * as React from \"react\"\r\nimport Chip from \"@mui/material/Chip\"\r\nimport Stack from \"@mui/material/Stack\"\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  root: {\r\n  },\r\n  stackRoot: {\r\n  }\r\n}))\r\n\r\nconst ChipControl = (props) => {\r\n  const classes = useStyles()\r\n  const { parentClassName, classNameContent } = props\r\n  return (\r\n    <Stack className={parentClassName ? parentClassName : classes.stackRoot} direction=\"row\">\r\n      <Chip\r\n        {...props}\r\n        className={classNameContent ? classNameContent : \"chip-container\"}\r\n        variant=\"outlined\">\r\n      </Chip>\r\n    </Stack>\r\n  )\r\n}\r\n\r\nexport default ChipControl","import React, { useState, useEffect, useStateIfMounted } from \"react\"\r\nimport Button from \"@mui/material/Button\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport PropTypes from \"prop-types\"\r\nimport { IconSave, IconCancel } from \"components/icon/icon\"\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\"\r\nimport { EColor, EButtonDetailType } from \"configs\"\r\nimport IconButton from \"@mui/material/IconButton\"\r\nimport { SpinningCircles } from \"react-loading-icons\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport Grid from \"@mui/material/Grid\"\r\n\r\nconst ButtonDetail = (props) => {\r\n  const dispatch = useDispatch()\r\n  const theme = createTheme({\r\n    palette: {\r\n      neutral: {\r\n        main: EColor.cancel,\r\n        contrastText: \"#fff\",\r\n      },\r\n    },\r\n  })\r\n  const { t } = useTranslation()\r\n  const { type, onClick, autoFocus, disabled, className } = props\r\n  const [icon, setIcon] = useState(\"\")\r\n  const [text, setText] = useState(\"\")\r\n  const [color, setColor] = useState(null)\r\n  const [defaultLoading, setDefaultLoading] = useState(false)\r\n  const loading = useSelector((state) => state.button.loading)\r\n  useEffect(() => {\r\n    switch (type) {\r\n      case EButtonDetailType.save:\r\n        setIcon(<IconSave />)\r\n        setText(t(\"Lưu\"))\r\n        setDefaultLoading(true)\r\n        break\r\n      case EButtonDetailType.ok:\r\n        setIcon(<IconSave />)\r\n        setText(t(\"Ok\"))\r\n        break\r\n      case EButtonDetailType.undo:\r\n        setIcon(<IconCancel></IconCancel>)\r\n        setText(t(\"Hủy bỏ\"))\r\n        setColor(\"neutral\")\r\n        break\r\n      case EButtonDetailType.accpet:\r\n        setIcon(<IconSave />)\r\n        setText(t(\"Xác nhận\"))\r\n        setDefaultLoading(true)\r\n        break\r\n      default:\r\n        break\r\n    }\r\n  }, [])\r\n  let button\r\n  if (type != \"Undo\") {\r\n    const themeButton = (\r\n      <Button\r\n        onClick={onClick}\r\n        color={color != null ? color : \"primary\"}\r\n        autoFocus={autoFocus}\r\n        variant=\"contained\"\r\n        disabled={defaultLoading ? loading : disabled}\r\n        className={className}\r\n      >\r\n        {text}\r\n      </Button>\r\n    )\r\n    button = defaultLoading && loading ?\r\n      (\r\n        <div>\r\n          <IconButton\r\n            className=\"icon-loading-container\"\r\n            hidden={!loading}\r\n            style={{ padding: 0 }}\r\n            aria-label=\"delete\"\r\n          >\r\n            <SpinningCircles\r\n              speed={1}\r\n              width={24}\r\n              height={24}\r\n              fill=\"#1976d2\"\r\n              stroke=\"#1976d2\"\r\n            />\r\n          </IconButton>\r\n          {themeButton}\r\n        </div>\r\n      ) : themeButton\r\n  } else {\r\n    button = <ThemeProvider theme={theme}>\r\n      <Button\r\n        onClick={onClick}\r\n        color={color != null ? color : \"primary\"}\r\n        autoFocus={autoFocus}\r\n        className={`${className} button-detail`}\r\n        disabled={disabled}\r\n        // startIcon={icon}\r\n        variant=\"outlined\"\r\n      >\r\n        {text}\r\n      </Button>\r\n    </ThemeProvider>\r\n  }\r\n  return button\r\n}\r\nButtonDetail.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n  autoFocus: PropTypes.bool,\r\n  disabled: PropTypes.bool,\r\n}\r\nButtonDetail.defaultProps = {\r\n  disabled: false,\r\n}\r\nexport default ButtonDetail\r\n","import * as React from 'react';\r\nimport FormGroup from '@mui/material/FormGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\n\r\nconst CheckBox = (props) => {\r\n    const { name, label, checked, onChange } = props;\r\n    return (\r\n        <FormGroup style={{ width: \"100%\" }}>\r\n            <FormControlLabel control={<Checkbox name={name} onChange={onChange} checked={checked} />} label={label} />\r\n        </FormGroup>\r\n    );\r\n}\r\nexport default CheckBox;","import * as React from 'react';\r\nimport { styled, alpha } from '@mui/material/styles';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport PropTypes from 'prop-types';\r\nimport { CheckBox } from 'components/checkbox';\r\n\r\nconst StyledMenu = styled((props) => (\r\n  <Menu\r\n    elevation={0}\r\n    anchorOrigin={{\r\n      vertical: 'bottom',\r\n      horizontal: 'right',\r\n    }}\r\n    transformOrigin={{\r\n      vertical: 'top',\r\n      horizontal: 'right',\r\n    }}\r\n    {...props}\r\n  />\r\n))(({ theme }) => ({\r\n  '& .MuiPaper-root': {\r\n    borderRadius: 6,\r\n    marginTop: theme.spacing(1),\r\n    minWidth: 180,\r\n    color: theme.palette.mode === 'light' ? 'rgb(55, 65, 81)' : theme.palette.grey[300],\r\n    boxShadow:\r\n      'rgb(255, 255, 255) 0px 0px 0px 0px, rgba(0, 0, 0, 0.05) 0px 0px 0px 1px, rgba(0, 0, 0, 0.1) 0px 10px 15px -3px, rgba(0, 0, 0, 0.05) 0px 4px 6px -2px',\r\n    '& .MuiMenu-list': {\r\n      padding: '4px 0',\r\n    },\r\n    '& .MuiMenuItem-root': {\r\n      '& .MuiSvgIcon-root': {\r\n        fontSize: 18,\r\n        // color: theme.palette.text.secondary,\r\n        // marginRight: theme.spacing(1.5),\r\n      },\r\n      '&:active': {\r\n        backgroundColor: alpha(\r\n          theme.palette.primary.main,\r\n          theme.palette.action.selectedOpacity,\r\n        ),\r\n      },\r\n    },\r\n  },\r\n}));\r\nconst ConfigColumn = (props) => {\r\n  const { anchorEl, handleClose, columnModel, onColumnConfigChange } = props;\r\n  const [state, setState] = React.useState(columnModel);\r\n  const open = Boolean(anchorEl);\r\n  const handleChange = (event) => {\r\n    var item = state.find((element) => {\r\n      return element.field === event.target.name;\r\n    });\r\n    item.value = event.target.checked;\r\n    setState(state);\r\n    console.log(state);\r\n  };\r\n  function findArrayElementByTitle(array, title) {\r\n    return array.find((element) => {\r\n      return element.field === title;\r\n    })\r\n  }\r\n  return (\r\n    <div>\r\n      <StyledMenu\r\n        id=\"column-config-menu\"\r\n        MenuListProps={{\r\n          'aria-labelledby': 'column-config-button',\r\n        }}\r\n        anchorEl={anchorEl}\r\n        open={open}\r\n        onClose={handleClose}\r\n      >\r\n        {\r\n          columnModel && columnModel.map((item, index) => {\r\n            return (<MenuItem key={item.field} disableRipple>\r\n              <CheckBox name={item.field} onChange={onColumnConfigChange} checked={item.isShow} label={item.label} />\r\n            </MenuItem>)\r\n          })\r\n        }\r\n      </StyledMenu>\r\n    </div>\r\n  );\r\n}\r\n\r\nConfigColumn.propTypes = {\r\n  anchorEl: PropTypes.object,\r\n  handleClose: PropTypes.func,\r\n  onColumnConfigChange: PropTypes.func\r\n}\r\nexport default ConfigColumn;","import React from 'react'\r\nimport ClickAwayListener from '@mui/material/ClickAwayListener'\r\nimport Paper from '@mui/material/Paper'\r\nimport MenuList from '@mui/material/MenuList'\r\nimport ButtonFuntion from 'components/button/ButtonFuntion'\r\nimport ButtonIcon from 'components/button/ButtonIcon'\r\nimport { EButtonType } from 'configs/constants'\r\nimport { PopoverControl } from 'components/popover'\r\nimport { IconExpand } from 'components/icon/icon'\r\nimport Menu from '@mui/material/Menu'\r\n\r\nconst DropdownMenu = (props) => {\r\n    const { genderDropdownItem, type = EButtonType.add, visible = false,\r\n        isShowEndIcon = true, label, isFloatLeft = false, spacingLeft = 1,\r\n        isButtonIcon = false, className, isCLoseOnClick = true, classNameIcon } = props\r\n    const [open, setOpen] = React.useState(false)\r\n    const anchorRef = React.useRef(null)\r\n\r\n    const handleToggle = () => {\r\n        setOpen((prevOpen) => !prevOpen)\r\n    }\r\n    const handleClose = (event) => {\r\n        if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n            return\r\n        }\r\n\r\n        setOpen(false)\r\n    }\r\n\r\n    function handleListKeyDown(event) {\r\n        if (event.key === 'Tab') {\r\n            event.preventDefault()\r\n            setOpen(false)\r\n        } else if (event.key === 'Escape') {\r\n            setOpen(false)\r\n        }\r\n    }\r\n\r\n    const genderBody = () => {\r\n        return <Paper>\r\n            <ClickAwayListener onClickAway={handleClose}>\r\n                <MenuList\r\n                    autoFocusItem={open}\r\n                    onClick={handleClose}\r\n                    id=\"composition-menu\"\r\n                    aria-labelledby=\"composition-button\"\r\n                    onKeyDown={handleListKeyDown}\r\n                >\r\n                    {genderDropdownItem && genderDropdownItem()}\r\n                </MenuList>\r\n            </ClickAwayListener>\r\n        </Paper>\r\n    }\r\n\r\n    const renderEndIcon = () => {\r\n        return <IconExpand />\r\n    }\r\n\r\n    const renderButtonFunction = () => {\r\n        return <ButtonFuntion\r\n            isFloatLeft={isFloatLeft}\r\n            label={label}\r\n            className={`button-detail`}\r\n            endIcon={isShowEndIcon ? renderEndIcon() : ''}\r\n            visible={visible}\r\n            spacingLeft={spacingLeft}\r\n            refs={anchorRef}\r\n            onClick={handleToggle}\r\n            type={type} />\r\n    }\r\n\r\n    const renderButtonIcon = () => {\r\n        return <ButtonIcon\r\n            refs={anchorRef}\r\n            type={type}\r\n            className={classNameIcon}\r\n            onClick={handleToggle} />\r\n    }\r\n\r\n    const onClick = (e) => {\r\n        if (isCLoseOnClick) {\r\n            handleClose(e)\r\n        }\r\n    }\r\n    return (\r\n        <div className={`${className}`}>\r\n            {isButtonIcon ? renderButtonIcon() : renderButtonFunction()}\r\n            <Menu\r\n                anchorEl={open ? anchorRef.current : null}\r\n                open={open}\r\n                onClose={handleClose}\r\n                onClick={onClick}\r\n                PaperProps={{\r\n                    elevation: 0,\r\n                    sx: {\r\n                        overflow: 'visible',\r\n                        filter: 'drop-shadow(0px 2px 8px rgba(0,0,0,0.32))',\r\n                        mt: 1.5,\r\n                        '& .MuiAvatar-root': {\r\n                            width: 32,\r\n                            height: 32,\r\n                            ml: -0.5,\r\n                            mr: 1,\r\n                        },\r\n                        '&:before': {\r\n                            content: '\"\"',\r\n                            display: 'block',\r\n                            position: 'absolute',\r\n                            top: 0,\r\n                            right: 14,\r\n                            width: 10,\r\n                            height: 10,\r\n                            bgcolor: 'background.paper',\r\n                            // transform: 'translateY(-50%) rotate(45deg)',\r\n                            zIndex: 0,\r\n                        },\r\n                    },\r\n                }}\r\n                transformOrigin={{ horizontal: 'right', vertical: 'top' }}\r\n                anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}\r\n            >\r\n                {genderDropdownItem()}\r\n            </Menu>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DropdownMenu","\r\nimport Grid from \"@mui/material/Grid\"\r\nimport MenuItem from '@mui/material/MenuItem'\r\n\r\nconst DropDownItem = (props) => {\r\n    const { onClick, title, icon = null } = props\r\n    return <MenuItem onClick={onClick}>\r\n        <Grid container columnSpacing={2}>\r\n            {icon ? <Grid width={'30px'} item display='flex' alignItems={'center'}>\r\n                {icon}\r\n            </Grid> : ''}\r\n            <Grid item>{title}</Grid>\r\n        </Grid>\r\n    </MenuItem>\r\n}\r\n\r\nexport default DropDownItem","import React, { useState, useEffect, useRef } from \"react\"\r\nimport Autocomplete from \"@mui/material/Autocomplete\"\r\nimport TextField from \"@mui/material/TextField\"\r\nimport { Controller } from \"react-hook-form\"\r\nimport Skeleton from \"@mui/material/Skeleton\"\r\nimport { useSelector } from \"react-redux\"\r\nimport Typography from '@mui/material/Typography'\r\nimport Box from '@mui/material/Box'\r\nimport { ChipControl } from \"components/chip\"\r\nimport { _TemplateVariant, EVariant, _ControlSizeDefault } from 'configs'\r\nimport { LabelControl } from 'components/label'\r\nimport _ from 'lodash'\r\n\r\nconst MultiSelect = React.memo(\r\n  ({ control, required, data, label, name, placeholder, disabled, size, fullWidth, renderOption, renderTags }) => {\r\n    const loadingPopup = useSelector((state) => state.master.loadingPopup)\r\n    const [value, setValue] = React.useState([])\r\n    const [text, setText] = React.useState(\"\")\r\n    const inputRef = useRef(null)\r\n    const handleKeyDown = (event) => {\r\n      switch (event.key) {\r\n        case \",\":\r\n        case \" \": {\r\n          event.preventDefault()\r\n          event.stopPropagation()\r\n          if (event.target.value.length > 0) {\r\n            setValue([...value, event.target.value])\r\n          }\r\n          break\r\n        }\r\n        default:\r\n      }\r\n    }\r\n\r\n    const onTextChange = (e) => {\r\n      if (e.target.value.indexOf(\"@\") >= 0) {\r\n        let bbbbb = e.target.value + \"aaaaaaaa\"\r\n\r\n        setText(bbbbb)\r\n      }\r\n      setText(e.target.value)\r\n    }\r\n\r\n    const onTextKeypress = (e) => {\r\n      if (e.key == \"@\" && e.target.value.indexOf(\"@\") < 0) {\r\n        e.target.value = e.target.value + \"@gmail.com\"\r\n        setText(e.target.value + \"aaaaaaaa\")\r\n        e.preventDefault()\r\n      }\r\n    }\r\n    const handleFocus = (e) => {\r\n      inputRef.target.select()\r\n    }\r\n\r\n    const getDataByDefaultValue = (value) => {\r\n      const values = _.filter(data, function (o) {\r\n        return _.indexOf(value, o.id, 0) >= 0;\r\n      })\r\n      return values\r\n    }\r\n\r\n    return (\r\n      <Controller\r\n        name={name}\r\n        render={({ field: { onChange, value }, fieldState: { error } }) =>\r\n          loadingPopup ? (\r\n            <Skeleton\r\n              width={\"100%\"}\r\n              size={size ? size : _ControlSizeDefault}\r\n              variant=\"text\"\r\n            >\r\n              <Autocomplete\r\n                multiple={true}\r\n                options={data}\r\n                size={size ? size : _ControlSizeDefault}\r\n                disabled={disabled}\r\n                fullWidth={fullWidth || false}\r\n                isOptionEqualToValue={(option, value) =>\r\n                  option != null && value != null ? option.id === value.id : \"\"\r\n                }\r\n                value={value != null ? value : []}\r\n                filterSelectedOptions\r\n                getOptionLabel={(option) => (option ? option.name : \"\")}\r\n                onChange={(event, newValue) => {\r\n                  onChange(newValue)\r\n                }}\r\n                renderInput={(params) => {\r\n                  params.inputProps.onKeyDown = handleKeyDown\r\n                  return (\r\n                    <TextField\r\n                      {...params}\r\n                      style={{ marginTop: \"0px\", marginBottom: \"0px\", minWidth: \"250px\" }}\r\n                      variant=\"outlined\"\r\n                      label={label}\r\n                      placeholder={placeholder}\r\n                      size={size ? size : _ControlSizeDefault}\r\n                      fullWidth\r\n                    ></TextField>\r\n                  )\r\n                }}\r\n              />\r\n            </Skeleton>\r\n          ) : (\r\n            <div className=\"containerControl\">\r\n              {_TemplateVariant === EVariant.normal ? (label ? <LabelControl required={required} label={label} /> : '') : ''}\r\n              <Autocomplete\r\n                multiple={true}\r\n                options={data}\r\n                size={size ? size : _ControlSizeDefault}\r\n                limitTags={2}\r\n                autoHighlight={true}\r\n                fullWidth={fullWidth || true}\r\n                style={{ marginTop: \"0px\" }}\r\n                disabled={disabled}\r\n                isOptionEqualToValue={(option, value) =>\r\n                  option != null && value != null ? option.id === value.id : \"\"\r\n                }\r\n                value={value != null ? getDataByDefaultValue(value) : []}\r\n                filterSelectedOptions\r\n                getOptionLabel={(option) => (option ? option.name : \"\")}\r\n                onChange={(event, newValue) => {\r\n                  if (newValue.length > 0) {\r\n                    onChange(_.map(newValue, (item) => {\r\n                      return item.id\r\n                    }))\r\n                  } else {\r\n                    onChange([])\r\n                  }\r\n                }}\r\n                renderOption={(props, option) => {\r\n                  return renderOption ? renderOption(props, option) : (<Box component=\"li\" sx={{ '& > img': { mr: 2, flexShrink: 0 } }} {...props}>\r\n                    <Typography key={option.id}>{option.name}</Typography>\r\n                  </Box>)\r\n                }}\r\n                renderTags={(value, getTagProps) =>\r\n                  value.map((option, index) => {\r\n                    return renderTags ? renderTags(option, { ...getTagProps({ index }) })\r\n                      : <ChipControl label={option.name} {...getTagProps({ index })} />\r\n                  })\r\n                }\r\n                renderInput={(params) => {\r\n                  params.inputProps.onKeyDown = handleKeyDown\r\n                  return (\r\n                    <TextField\r\n                      {...params}\r\n                      style={{ marginTop: \"0px\", marginBottom: \"0px\", minWidth: \"250px\" }}\r\n                      label={_TemplateVariant === EVariant.outlined ? label : ''}\r\n                      placeholder={placeholder}\r\n                      margin=\"normal\"\r\n                      fullWidth={fullWidth || true}\r\n                      size={size ? size : _ControlSizeDefault}\r\n                    ></TextField>\r\n                  )\r\n                }}\r\n              />\r\n            </div>\r\n          )\r\n        }\r\n        defaultValue={[]}\r\n        control={control}\r\n      />\r\n    )\r\n  }\r\n)\r\n\r\nexport default MultiSelect\r\n","import React, { useState, useEffect, useCallback } from \"react\"\r\nimport TextField from '@mui/material/TextField'\r\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns'\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider'\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker'\r\nimport { DesktopDatePicker } from '@mui/x-date-pickers/DesktopDatePicker'\r\nimport Stack from '@mui/material/Stack'\r\nimport { useTranslation } from \"react-i18next\"\r\nimport { EFormatDate } from \"configs/constants\"\r\nimport { Controller } from \"react-hook-form\"\r\nimport { useSelector } from \"react-redux\"\r\nimport Skeleton from \"@mui/material/Skeleton\"\r\nimport { _TemplateVariant, EVariant, _ControlSizeDefault } from \"configs\"\r\nimport { LabelControl } from 'components/label'\r\nimport _ from 'lodash'\r\n\r\nconst DatePickerInput = ({ size, onChange, disabled, control, name, label, formatDate = EFormatDate.ddmmyyyy }) => {\r\n    const loadingPopup = useSelector((state) => state.master.loadingPopup)\r\n    const { t } = useTranslation()\r\n    const [value, setValue] = React.useState(null)\r\n\r\n    return (\r\n        <Controller\r\n            name={name}\r\n            render={({ field, fieldState: { error } }) =>\r\n                loadingPopup ? (\r\n                    <Skeleton\r\n                        width={\"100%\"}\r\n                        variant=\"text\"\r\n                        size={size ? size : _ControlSizeDefault}\r\n                    >\r\n                        <div className=\"containerControl\">\r\n                            {_TemplateVariant === EVariant.normal ? (label ? <LabelControl label={label} /> : '') : ''}\r\n                            <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                                <DesktopDatePicker\r\n                                    clearable\r\n                                    value={null}\r\n                                    size={size ? size : _ControlSizeDefault}\r\n                                    disabled={disabled ? disabled : false}\r\n                                    inputFormat={EFormatDate.ddmmyyyy}\r\n                                    onChange={(newValue) => {\r\n                                        setValue(newValue)\r\n                                        field.onChange(newValue)\r\n                                        onChange && onChange(newValue)\r\n                                    }}\r\n                                    renderInput={(params) =>\r\n                                        <TextField\r\n                                            size={size ? size : _ControlSizeDefault} {...params} />}\r\n                                />\r\n                            </LocalizationProvider >\r\n                        </div>\r\n                    </Skeleton>\r\n\r\n                ) : (\r\n                    <div className=\"containerControl\">\r\n                        {_TemplateVariant === EVariant.normal ? (label ? <LabelControl label={label} /> : '') : ''}\r\n                        <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                            <DesktopDatePicker\r\n                                label={_TemplateVariant === EVariant.outlined ? label : ''}\r\n                                clearable\r\n                                value={value || !_.isNil(field?.value) ? field?.value : null}\r\n                                disabled={disabled ? disabled : false}\r\n                                inputFormat={formatDate}\r\n                                mask={\"\"}\r\n                                onChange={(newValue) => {\r\n                                    setValue(newValue)\r\n                                    field.onChange(newValue)\r\n                                    onChange && onChange(newValue)\r\n                                }}\r\n                                renderInput={(params) => <TextField\r\n                                    fullWidth\r\n                                    size={size ? size : _ControlSizeDefault} {...params} />}\r\n                            />\r\n                        </LocalizationProvider >\r\n                    </div>\r\n                )\r\n            }\r\n            control={control}\r\n        />\r\n    )\r\n}\r\n\r\nexport default DatePickerInput","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Link from '@mui/material/Link'\r\n\r\nconst LinkControl = (props) => {\r\n    const { title, href, underline, onClick, target = \"_blank\" } = props\r\n\r\n    return (\r\n        <Link style={{ width: '100%' }} href={href && href} target={target} onClick={onClick} underline={underline}>\r\n            {title}\r\n        </Link>\r\n    )\r\n}\r\nLinkControl.propTypes = {\r\n    href: PropTypes.string,\r\n    underline: PropTypes.string,\r\n}\r\nLinkControl.defaultProps = {\r\n    href: null,\r\n    underline: \"none\"\r\n}\r\nexport default LinkControl","import React from 'react';\r\nimport { useMemo } from 'react';\r\n\r\nexport const DOTS = '...';\r\n\r\nconst range = (start, end) => {\r\n  let length = end - start + 1;\r\n  return Array.from({ length }, (_, idx) => idx + start);\r\n};\r\n\r\nexport const usePagination = ({\r\n  totalCount,\r\n  pageSize,\r\n  siblingCount = 1,\r\n  currentPage\r\n}) => {\r\n  const paginationRange = useMemo(() => {\r\n    const totalPageCount = Math.ceil(totalCount / (_.isNil(pageSize) ? 10 : pageSize));\r\n\r\n    // Pages count is determined as siblingCount + firstPage + lastPage + currentPage + 2*DOTS\r\n    const totalPageNumbers = siblingCount + 5;\r\n\r\n    /*\r\n      If the number of pages is less than the page numbers we want to show in our\r\n      paginationComponent, we return the range [1..totalPageCount]\r\n    */\r\n    if (totalPageNumbers >= totalPageCount) {\r\n      return range(1, totalPageCount);\r\n    }\r\n\r\n    const leftSiblingIndex = Math.max(currentPage - siblingCount, 1);\r\n    const rightSiblingIndex = Math.min(\r\n      currentPage + siblingCount,\r\n      totalPageCount\r\n    );\r\n\r\n    /*\r\n      We do not want to show dots if there is only one position left \r\n      after/before the left/right page count as that would lead to a change if our Pagination\r\n      component size which we do not want\r\n    */\r\n    const shouldShowLeftDots = leftSiblingIndex > 2;\r\n    const shouldShowRightDots = rightSiblingIndex < totalPageCount - 2;\r\n\r\n    const firstPageIndex = 1;\r\n    const lastPageIndex = totalPageCount;\r\n\r\n    if (!shouldShowLeftDots && shouldShowRightDots) {\r\n      let leftItemCount = 3 + 2 * siblingCount;\r\n      let leftRange = range(1, leftItemCount);\r\n\r\n      return [...leftRange, DOTS, totalPageCount];\r\n    }\r\n\r\n    if (shouldShowLeftDots && !shouldShowRightDots) {\r\n      let rightItemCount = 3 + 2 * siblingCount;\r\n      let rightRange = range(\r\n        totalPageCount - rightItemCount + 1,\r\n        totalPageCount\r\n      );\r\n      return [firstPageIndex, DOTS, ...rightRange];\r\n    }\r\n\r\n    if (shouldShowLeftDots && shouldShowRightDots) {\r\n      let middleRange = range(leftSiblingIndex, rightSiblingIndex);\r\n      return [firstPageIndex, DOTS, ...middleRange, DOTS, lastPageIndex];\r\n    }\r\n  }, [totalCount, pageSize, siblingCount, currentPage]);\r\n\r\n  return paginationRange;\r\n};","import React from 'react'\r\nimport classnames from 'classnames'\r\nimport { usePagination, DOTS } from './usePagination'\r\nimport './pagination.scss'\r\nimport { NumberInput } from 'components/input'\r\nimport { useForm } from \"react-hook-form\"\r\nimport { useSelector } from \"react-redux\"\r\nimport _ from 'lodash'\r\n\r\nconst Pagination = props => {\r\n  const {\r\n    onPageChange,\r\n    totalCount,\r\n    siblingCount = 1,\r\n    currentPage,\r\n    className,\r\n    onPageLengthChange\r\n  } = props\r\n\r\n  const pageSize = useSelector((state) => state.master.pageSize)\r\n  const {\r\n    control,\r\n  } = useForm({\r\n    defaultValues: {\r\n      length: _.isNil(pageSize) ? 10 : pageSize\r\n    }\r\n  })\r\n\r\n  const paginationRange = usePagination({\r\n    currentPage,\r\n    totalCount,\r\n    siblingCount,\r\n    pageSize\r\n  })\r\n\r\n  const onNext = () => {\r\n    onPageChange(currentPage + 1)\r\n  }\r\n\r\n  const onPrevious = () => {\r\n    onPageChange(currentPage - 1)\r\n  }\r\n\r\n  const renderPageSizeElement = () => {\r\n    return <NumberInput control={control} onChange={onPageLengthChange} name='length' className='' style={{ width: '70px' }} fullWidth={false} />\r\n  }\r\n\r\n  if (currentPage === 0 || paginationRange.length < 2) {\r\n    return (\r\n      <div className='pagination-root'>\r\n        {renderPageSizeElement()}\r\n        <ul\r\n          className={classnames('pagination-container', { [className]: className })}\r\n        >\r\n          <li key={\"left\"}\r\n            className={classnames('pagination-item', {\r\n              disabled: true\r\n            })}\r\n            onClick={onPrevious}\r\n          >\r\n            <div className=\"arrow left\" />\r\n          </li>\r\n          <li key={\"1\"}\r\n            className={classnames('pagination-item', {\r\n              selected: true,\r\n              disabled: true\r\n            })}\r\n            onClick={() => onPageChange(1)}\r\n          >\r\n            {1}\r\n          </li>\r\n          <li key={\"next\"}\r\n            className={classnames('pagination-item', {\r\n              disabled: true\r\n            })}\r\n            onClick={onNext}\r\n          >\r\n            <div className=\"arrow right\" />\r\n          </li>\r\n        </ul>\r\n      </div>)\r\n  }\r\n\r\n\r\n  let lastPage = paginationRange[paginationRange.length - 1]\r\n  return (\r\n    <div className='pagination-root'>\r\n      {renderPageSizeElement()}\r\n      <ul\r\n        className={classnames('pagination-container', { [className]: className })}\r\n      >\r\n        <li key={\"left\"}\r\n          className={classnames('pagination-item', {\r\n            disabled: currentPage === 1\r\n          })}\r\n          onClick={onPrevious}\r\n        >\r\n          <div className=\"arrow left\" />\r\n        </li>\r\n        {\r\n          paginationRange.map(pageNumber => {\r\n            if (pageNumber === DOTS) {\r\n              return <li key={pageNumber} className=\"pagination-item dots\">...</li>\r\n            }\r\n\r\n            return (\r\n              <li key={pageNumber}\r\n                className={classnames('pagination-item', {\r\n                  selected: pageNumber === currentPage\r\n                })}\r\n                onClick={() => onPageChange(pageNumber)}\r\n              >\r\n                {pageNumber}\r\n              </li>\r\n            )\r\n          })\r\n        }\r\n        <li key={\"next\"}\r\n          className={classnames('pagination-item', {\r\n            disabled: currentPage === lastPage\r\n          })}\r\n          onClick={onNext}\r\n        >\r\n          <div className=\"arrow right\" />\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Pagination","import React from 'react';\r\n\r\nimport './loading.scss';\r\n\r\nconst Loading = props => {\r\n    return (\r\n        <div className='loading-container'>\r\n            <div className=\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div>\r\n            <span>Vui lòng chờ trong giây lát</span>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Loading;","\r\nimport React, { useMemo, useCallback, useState, useEffect, useRef } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { AgGridReact } from '@ag-grid-community/react'\r\nimport '@ag-grid-community/core/dist/styles/ag-grid.css'\r\nimport '@ag-grid-community/core/dist/styles/ag-theme-alpine.css'\r\nimport { ModuleRegistry } from '@ag-grid-community/core'\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { ClientSideRowModelModule } from '@ag-grid-community/client-side-row-model'\r\nimport {\r\n    setToolbarVisibility,\r\n    setReloadNull,\r\n    setPageSize\r\n} from \"stores/views/master\"\r\nimport { Pagination } from 'components/pagination'\r\nimport { Loading } from 'components/loading'\r\nimport { get } from \"services\"\r\nimport _ from 'lodash'\r\nimport './styles.scss'\r\n\r\n// Register the required feature modules with the Grid\r\nModuleRegistry.registerModules([ClientSideRowModelModule])\r\n\r\nconst GridData = (props) => {\r\n    const gridRef = useRef()\r\n    const dispatch = useDispatch()\r\n    const { columns = [], rowHeight,\r\n        columnVisibility, filterModels, url, onRowClicked, frameworkComponents, autoGroupColumnDef } = props\r\n    const [columnsDef, setColumnsDef] = useState([...columns]);\r\n    const gridStyle = useMemo(() => ({ width: '100%', display: \"flex\", flexDirection: \"column\" }), [])\r\n    const [currentPage, setCurrentPage] = useState(null)\r\n    const [sortModel, setSortModel] = useState(null)\r\n    const toolbarVisible = { ...useSelector((state) => state.master.toolbarVisible) }\r\n    const isReload = useSelector((state) => state.master.isReload)\r\n    const [data, setData] = useState(null)\r\n    const loading = useSelector((state) => state.master.loading)\r\n    const pageSize = useSelector((state) => state.master.pageSize)\r\n\r\n    const defaultColDef = useMemo(() => {\r\n        return {\r\n            resizable: true,\r\n            sortable: true,\r\n        }\r\n    }, [])\r\n\r\n    const onSortChanged = (a, b) => {\r\n        const columnState = a.columnApi.getColumnState()\r\n        let sortModel = []\r\n        columnState.map((item) => {\r\n            if (item.sort) {\r\n                sortModel = [{ field: item.colId, sort: item.sort }]\r\n                return\r\n            }\r\n        })\r\n        setSortModel(sortModel)\r\n    }\r\n\r\n    const gridOptions = {\r\n        loadingOverlayComponent: Loading,\r\n        loadingOverlayComponentParams: {\r\n            loadingMessage: 'One moment please...',\r\n        },\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (gridRef && gridRef.current.api) {\r\n            if (loading)\r\n                gridRef.current.api.showLoadingOverlay()\r\n            else\r\n                gridRef.current.api.hideOverlay()\r\n        }\r\n    }, [loading])\r\n\r\n    const onFirstDataRendered = () => {\r\n        if (gridRef && gridRef.current.api) {\r\n\r\n            if (loading)\r\n                gridRef.current.api.showLoadingOverlay()\r\n            else\r\n                gridRef.current.api.hideOverlay()\r\n\r\n            const allColumnIds = []\r\n            gridRef.current.columnApi.getAllColumns().forEach((column) => {\r\n                if (column.colDef.suppressAutoSize)\r\n                    allColumnIds.push(column.getId())\r\n            })\r\n            gridRef.current.columnApi.autoSizeColumns(allColumnIds, false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        columnsDef.map((item) => {\r\n            if (item.field) {\r\n                gridRef.current.columnApi && gridRef.current.columnApi.setColumnVisible(item.field, columnVisibility[item.field])\r\n            }\r\n        })\r\n    }, [columnVisibility])\r\n\r\n    useEffect(() => {\r\n        setColumnsDef([...columns])\r\n    }, [columns])\r\n\r\n    const onPageChange = (param) => {\r\n        setCurrentPage(param - 1)\r\n    }\r\n\r\n    const onSelectionChanged = (newSelection) => {\r\n        let selectedNodes = newSelection.api.getSelectedNodes()\r\n        let selectedData = selectedNodes.map(node => node.data)\r\n        if (selectedData.length > 0) {\r\n            toolbarVisible.function = true\r\n        }\r\n        else {\r\n            toolbarVisible.function = false\r\n        }\r\n        dispatch(setToolbarVisibility({ ...toolbarVisible }))\r\n    }\r\n\r\n    const fetchData = async () => {\r\n        if (gridRef && gridRef.current.api) {\r\n            gridRef.current.api.showLoadingOverlay()\r\n        }\r\n        const params = new URLSearchParams(window.location.search)\r\n        const filterParams = params.get(\"filters\")\r\n        return await get(url, {\r\n            draw: currentPage || 0,\r\n            start: currentPage ? currentPage * (_.isNil(pageSize) ? 10 : pageSize) : 0,\r\n            length: _.isNil(pageSize) ? 10 : pageSize,\r\n            fieldSort:\r\n                sortModel != null && sortModel.length > 0 ? sortModel[0].field : \"\",\r\n            sort: sortModel != null && sortModel.length > 0 ? sortModel[0].sort : \"\",\r\n            filters: filterParams\r\n\r\n        }).then((data) => {\r\n            if (gridRef && gridRef.current.api) {\r\n                gridRef.current.api.hideOverlay()\r\n            }\r\n            return data\r\n        })\r\n    }\r\n\r\n    const onGridReady = useCallback(async (params) => {\r\n        const value = await fetchData()\r\n        setData(value)\r\n    }, [])\r\n\r\n    const onPageLengthChange = (value) => {\r\n        dispatch(setPageSize(_.parseInt(_.isEmpty(value) ? 1000 : value)))\r\n    }\r\n\r\n    useEffect(async () => {\r\n        if (currentPage != null) {\r\n            setData(await fetchData())\r\n        }\r\n    }, [currentPage])\r\n\r\n    useEffect(async () => {\r\n        dispatch(setReloadNull())\r\n    }, [])\r\n\r\n    useEffect(async () => {\r\n        if (sortModel != null || filterModels != null || isReload != null) {\r\n            setData(await fetchData())\r\n        }\r\n    }, [sortModel, filterModels, isReload])\r\n\r\n    useEffect(async () => {\r\n        if (!_.isNil(pageSize)) {\r\n            setData(await fetchData())\r\n        }\r\n    }, [pageSize])\r\n\r\n    return (\r\n        <div style={{ width: \"100%\" }} className=\"grid-wrapper\">\r\n            <div style={gridStyle} className=\"ag-theme-alpine\">\r\n                <AgGridReact\r\n                    rowHeight={rowHeight && rowHeight}\r\n                    ref={gridRef}\r\n                    animateRows={true}\r\n                    sort\r\n                    style={{ height: \"100%\" }}\r\n                    defaultColDef={defaultColDef}\r\n                    enableRangeSelection={true}\r\n                    rowData={data && data.data && data.data.items}\r\n                    domLayout='autoHeight'\r\n                    gridOptions={gridOptions}\r\n                    columnDefs={columnsDef}\r\n                    rowSelection='multiple'\r\n                    onGridReady={onGridReady}\r\n                    onRowClicked={onRowClicked}\r\n                    onFirstDataRendered={onFirstDataRendered}\r\n                    autoGroupColumnDef={autoGroupColumnDef}\r\n                    enableCellTextSelection={true}\r\n                    // overlayLoadingTemplate={'<span class=\"ag-overlay-loading-center\">Please wait while your rows are loading</span>'}\r\n                    // overlayNoRowsTemplate={\r\n                    //     '<span style=\"padding: 10px; border: 2px solid #444; background: lightgoldenrodyellow\">This is a custom \\'no rows\\' overlay</span>'\r\n                    // }\r\n                    onSortChanged={onSortChanged}\r\n                    suppressRowClickSelection={true}\r\n                    suppressCellFocus={true}\r\n                    frameworkComponents={frameworkComponents}\r\n                    groupSelectsChildren={true}\r\n                    suppressAggFuncInHeader={true}\r\n                    onSelectionChanged={onSelectionChanged}>\r\n                </AgGridReact>\r\n                <Pagination style={{ width: \"100%\" }}\r\n                    currentPage={currentPage ? currentPage + 1 : 1}\r\n                    onPageChange={onPageChange}\r\n                    onPageLengthChange={onPageLengthChange}\r\n                    pageSize={pageSize} totalCount={data && data.recordsTotal} className=\"pagination-bar\" />\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\nGridData.propTypes = {\r\n    columns: PropTypes.array,\r\n    gridOptions: PropTypes.object,\r\n    onSelectionChanged: PropTypes.func,\r\n    onPageChange: PropTypes.func,\r\n}\r\nGridData.defaultProps = {\r\n    columns: [],\r\n}\r\n\r\nexport default GridData","import React, { useState, useEffect, useCallback } from \"react\"\r\nimport SingleAddSelect from 'components/select/SingleAddSelect'\r\nimport MultiSelect from 'components/select/MultiSelect'\r\nimport Grid from \"@mui/material/Grid\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport { DatePickerInput } from \"components/datepicker\"\r\nimport { EFilterType } from \"configs\"\r\nimport { TextInput } from \"components/input\"\r\nimport ButtonIcon from \"components/button/ButtonIcon\"\r\nimport { EButtonIconType } from 'configs'\r\n\r\nconst FilterItem = React.memo((props) => {\r\n    console.log(\"render FilterItem\")\r\n    const { t } = useTranslation()\r\n    const { columnModel = [], name, index, control, onDeleteItem, onClearValue,\r\n        onClearConditionValue, item, setValue, getValues } = props\r\n\r\n    const textOptions = [\r\n        {\r\n            id: 0,\r\n            name: t(\"Bằng\")\r\n        },\r\n        {\r\n            id: 1,\r\n            name: t(\"Không bằng\")\r\n        },\r\n        {\r\n            id: 2,\r\n            name: t(\"Có chứa\")\r\n        },\r\n        {\r\n            id: 9,\r\n            name: t(\"Không chứa\")\r\n        },\r\n    ]\r\n    const selectOptions = [{\r\n        id: 0,\r\n        name: t(\"Bằng\")\r\n    },\r\n    {\r\n        id: 1,\r\n        name: t(\"Không bằng\")\r\n    }]\r\n    const dateOptions = [{\r\n        id: 3,\r\n        name: t(\"Lớn hơn\")\r\n    },\r\n    {\r\n        id: 5,\r\n        name: t(\"Nhỏ hơn\")\r\n    },\r\n    {\r\n        id: 4,\r\n        name: t(\"Lớn hơn hoặc bằng\")\r\n    },\r\n    {\r\n        id: 6,\r\n        name: t(\"Nhỏ hơn hoặc bằng\")\r\n    }]\r\n    const status = [{\r\n        id: 1,\r\n        name: t(\"Kích hoạt\")\r\n    },\r\n    {\r\n        id: 3,\r\n        name: t(\"Chờ xác nhận\")\r\n    },\r\n    {\r\n        id: 4,\r\n        name: t(\"Tạm khóa\")\r\n    }]\r\n    const [conditionOption, setConditionOption] = React.useState([])\r\n    const [conditionValue, setConditionValue] = React.useState(null)\r\n    const [columnValue, setColumnValue] = React.useState(null)\r\n    const [valueComponent, setValueComponent] = React.useState(null)\r\n    const [show, setShow] = React.useState(true)\r\n    const [display, setDisplay] = React.useState(\"none\")\r\n    const [width, setWidth] = React.useState(300)\r\n    const [disableCondition, setDisableCondition] = React.useState(true)\r\n    const size = \"small\"\r\n    const setColumnModelData = () => {\r\n        const data = []\r\n        columnModel && columnModel.map((item) => {\r\n            if (!item.isHideFilter) {\r\n                data.push({ id: item.field, name: item.label, type: item.type, isCustom: item.isCustom })\r\n            }\r\n        })\r\n        return data\r\n    }\r\n\r\n    const getConditionValue = (type) => {\r\n        if (type == EFilterType.text) {\r\n            return textOptions\r\n        } else if (type == EFilterType.select) {\r\n            return selectOptions\r\n        } else if (type == EFilterType.datetime) {\r\n            return dateOptions\r\n        }\r\n    }\r\n\r\n    const onColumnChange = (value) => {\r\n        const valueItem = columnModel.find((item) => {\r\n            return item.field === value\r\n        })\r\n        if (columnValue && valueItem && valueItem.type != columnValue.type) {\r\n            onClearValue(index)\r\n        }\r\n        setColumnValue(valueItem)\r\n        if (valueItem) {\r\n            const currentColumnType = getValues(`test[${index}].type`)\r\n            if (currentColumnType !== valueItem.type) {\r\n                setValue(`test[${index}].condition`, null)\r\n            }\r\n            setDisplay(\"block\")\r\n            setDisableCondition(false)\r\n            setValue(`test[${index}].type`, valueItem.type)\r\n            setValue(`test[${index}].isCustom`, valueItem.isCustom)\r\n            var disabled = true\r\n            if (conditionValue) {\r\n                disabled = false\r\n            }\r\n            setConditionOption(getConditionValue(valueItem.type))\r\n            if (valueItem.type == EFilterType.text) {\r\n                setWidth(300)\r\n                setValueComponent(\r\n                    <TextInput\r\n                        label={t(\"Giá trị\")}\r\n                        disabled={disabled}\r\n                        size={size}\r\n                        name={`test[${index}].value`}\r\n                        control={control}\r\n                    />\r\n                )\r\n            }\r\n            else if (valueItem.type == EFilterType.select) {\r\n                setWidth(300)\r\n                setValueComponent(\r\n                    <MultiSelect size={size} multiple={true}\r\n                        disabled={disabled}\r\n                        control={control}\r\n                        label={t(\"Giá trị\")}\r\n                        name={`test[${index}].selectValue`}\r\n                        data={status}>\r\n                    </MultiSelect>\r\n                )\r\n            }\r\n            else if (valueItem.type == EFilterType.datetime) {\r\n                setWidth(200)\r\n                setValueComponent(\r\n                    <DatePickerInput\r\n                        label={t(\"Giá trị\")}\r\n                        control={control}\r\n                        disabled={disabled}\r\n                        name={`test[${index}].value`}\r\n                        size=\"small\">\r\n                    </DatePickerInput>\r\n                )\r\n            }\r\n\r\n        }\r\n        else {\r\n            setDisplay(\"none\")\r\n            setDisableCondition(true)\r\n            setConditionOption([])\r\n            setConditionValue(null)\r\n            onClearValue(index)\r\n            onClearConditionValue(index)\r\n        }\r\n    }\r\n\r\n    const onConditionChange = (value) => {\r\n        setConditionValue(value)\r\n    }\r\n\r\n    const onDelete = () => {\r\n        onDeleteItem(index)\r\n    }\r\n\r\n    useEffect(() => {\r\n        var disabled = true\r\n        if (conditionValue != null || item.condition != null) {\r\n            disabled = false\r\n        }\r\n        else {\r\n            onClearValue(index)\r\n        }\r\n        const type = columnValue ? columnValue.type : (item ? item.type : null)\r\n        if (item.column) {\r\n            setConditionOption(getConditionValue(type))\r\n        }\r\n        if (item.condition != null) {\r\n            setDisplay('Block')\r\n        }\r\n        if (type != null) {\r\n            if (type == EFilterType.text) {\r\n                setValueComponent(\r\n                    <TextInput\r\n                        label={t(\"Giá trị\")}\r\n                        disabled={disabled}\r\n                        size={size}\r\n                        fullWidth\r\n                        name={`test[${index}].value`}\r\n                        control={control} />\r\n                )\r\n            }\r\n            else if (type == EFilterType.select) {\r\n                setValueComponent(\r\n                    <MultiSelect\r\n                        disabled={disabled}\r\n                        control={control}\r\n                        size={size}\r\n                        name={`test[${index}].selectValue`}\r\n                        label={t(\"Giá trị\")}\r\n                        data={status}></MultiSelect>\r\n                )\r\n            }\r\n            else if (type == EFilterType.datetime) {\r\n                setValueComponent(<DatePickerInput\r\n                    disabled={disabled}\r\n                    label={t(\"Giá trị\")}\r\n                    control={control}\r\n                    name={`test[${index}].value`}\r\n                    size=\"small\"></DatePickerInput>)\r\n            }\r\n        }\r\n    }, [conditionValue])\r\n\r\n    return (\r\n        <Grid key={name} item container spacing={2} >\r\n            <Grid item width={200}>\r\n                <SingleAddSelect\r\n                    size={size}\r\n                    onSelectChange={onColumnChange}\r\n                    label={t(\"Cột\")}\r\n                    data={setColumnModelData()}\r\n                    control={control}\r\n                    name={`test[${index}].column`}\r\n                >\r\n                </SingleAddSelect>\r\n            </Grid>\r\n            <Grid item width={200}  >\r\n                <SingleAddSelect\r\n                    size={size}\r\n                    onSelectChange={onConditionChange}\r\n                    disabled={item && item.condition != null ? false : disableCondition}\r\n                    control={control}\r\n                    label={t(\"So sánh\")}\r\n                    name={`test[${index}].condition`}\r\n                    data={conditionOption}>\r\n                </SingleAddSelect>\r\n            </Grid>\r\n            <Grid display={display} item minWidth={width}  >\r\n                {valueComponent}\r\n            </Grid>\r\n            <Grid item style={{ display: 'flex', alignItems: 'center' }}  >\r\n                <ButtonIcon onClick={onDelete} type={EButtonIconType.delete}></ButtonIcon>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n})\r\nexport default FilterItem","import React, { useState, useEffect } from \"react\"\r\nimport PropTypes from 'prop-types'\r\nimport FilterItem from './filterItem'\r\nimport Grid from \"@mui/material/Grid\"\r\nimport Box from \"@mui/material/Box\"\r\nimport { save, get } from \"services\"\r\nimport Collapse from '@mui/material/Collapse'\r\nimport ButtonFuntion from 'components/button/ButtonFuntion'\r\nimport { EButtonType, EButtonIconType, baseUrl } from 'configs'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { useForm, useFieldArray, Controller } from \"react-hook-form\"\r\nimport { TextInput } from \"components/input\"\r\nimport ButtonIcon from \"components/button/ButtonIcon\"\r\nimport { PopoverControl } from 'components/popover'\r\nimport './styles.scss'\r\nimport { useHistory, useLocation } from 'react-router'\r\nimport { v4 as uuidv4 } from 'uuid'\r\nimport SingleAddSelect from 'components/select/SingleAddSelect'\r\nimport _ from 'lodash'\r\n\r\nconst Filter = (props) => {\r\n    console.log(\"render Filter\")\r\n    const { anchorEl, onApplyFilter, columnModel, dropdownItem, component } = props\r\n    const open = Boolean(anchorEl)\r\n    const [anchorSave, setAnchorSave] = React.useState(null)\r\n    const [filterData, setFilterData] = React.useState(null)\r\n    const { control, reset, handleSubmit, setValue, getValues, setError } = useForm({\r\n    })\r\n    const { fields, append, remove } = useFieldArray({\r\n        control,\r\n        name: \"test\",\r\n    })\r\n    const history = useHistory()\r\n    const location = useLocation()\r\n\r\n    const handleClickSave = (event) => {\r\n        setAnchorSave(event.currentTarget)\r\n    }\r\n\r\n    const handleCloseSave = () => {\r\n        setAnchorSave(null)\r\n    }\r\n\r\n    const openSave = Boolean(anchorSave)\r\n    const id = openSave ? 'simple-popover' : undefined\r\n    const dataFromServer = {\r\n        name: \"\",\r\n        test: [{\r\n            value: \"\", selectValue: null, column: null,\r\n            condition: null, id: uuidv4(), type: null\r\n        }]\r\n    }\r\n    const { t } = useTranslation()\r\n    const onAdd = () => {\r\n        append({\r\n            column: null,\r\n            condition: null,\r\n            value: \"\",\r\n            selectValue: null,\r\n            id: uuidv4(),\r\n            type: null\r\n        })\r\n    }\r\n\r\n    const loadFilters = async () => {\r\n        await get(baseUrl.sys_filter, {\r\n            component: component,\r\n            isGetAll: true\r\n        }).then((data) => {\r\n            if (data && data.data.items.length > 0) {\r\n                setFilterData(data.data.items)\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadFilters()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const urlParams = new URLSearchParams(window.location.search)\r\n        const filters = urlParams.get('filters')\r\n        if (filters) {\r\n            const filterObject = JSON.parse(filters)\r\n            console.log(filterObject)\r\n            setValue('test', filterObject)\r\n        } else {\r\n            reset(dataFromServer)\r\n        }\r\n    }, [])\r\n\r\n    const onClear = () => {\r\n        reset(dataFromServer)\r\n    }\r\n\r\n    const onSave = async (data) => {\r\n        if (!data.name) {\r\n            setError('name', { type: 'focus', message: t(\"Nhập tên bộ lọc\") })\r\n        }\r\n        const value = getDataFilter(data)\r\n        if (value) {\r\n            const res = await save(baseUrl.sys_filter, { name: data.name, filterData: JSON.stringify(value), component: component })\r\n        }\r\n    }\r\n\r\n    const getDataFilter = (data) => {\r\n        if (data && data.test) {\r\n            const value = []\r\n            data.test.map((item, index) => {\r\n                if (item.column && item.condition != null) {\r\n                    if (!item.selectValue) {\r\n                        value.push({ column: item.column, condition: item.condition, value: item.value, type: item.type, isCustom: item.isCustom })\r\n                    }\r\n                    else {\r\n                        value.push({ column: item.column, condition: item.condition, value: item.selectValue.map(e => e.id).join(','), type: item.type, isCustom: item.isCustom })\r\n                    }\r\n                }\r\n            })\r\n            return value\r\n        }\r\n    }\r\n\r\n    const onSubmit = (data) => {\r\n        const filters = getDataFilter(data)\r\n        const url = new URL(window.location)\r\n        if (_.isArray(filters) && filters.length > 0) {\r\n            url.searchParams.set('filters', JSON.stringify(filters))\r\n            window.history.pushState(null, '', url.toString())\r\n\r\n            // const params = new URLSearchParams({ filters: JSON.stringify(value) })\r\n            // history.replace({ pathname: location.pathname, search: params.toString() })\r\n        } else {\r\n            url.searchParams.delete('filters')\r\n            window.history.pushState(null, '', url.toString())\r\n        }\r\n        onApplyFilter(filters)\r\n    }\r\n\r\n    const onDeleteItem = (index) => {\r\n        remove(index)\r\n    }\r\n\r\n    const onClearValue = (value) => {\r\n        setValue(`test[${value}].value`, \"\")\r\n        setValue(`test[${value}].selectValue`, null)\r\n    }\r\n\r\n    const onClearConditionValue = (value) => {\r\n        setValue(`test[${value}].condition`, null)\r\n    }\r\n\r\n    const genderPopoverControl = () => {\r\n        return (\r\n            <Grid className='box-container' flexWrap='nowrap' width=\"auto\" container\r\n            >\r\n                <Grid item  >\r\n                    <TextInput label={t(\"Nhập tên bộ lọc\")}\r\n                        fullWidth\r\n                        required={true}\r\n                        size={\"small\"}\r\n                        control={control}\r\n                        name={\"name\"} />\r\n                </Grid>\r\n                <Grid item  >\r\n                    <ButtonIcon\r\n                        onClick={handleCloseSave}\r\n                        type={EButtonIconType.cancel}\r\n                        color=\"neutral\"\r\n                    />\r\n                </Grid>\r\n                <Grid item  >\r\n                    <ButtonIcon\r\n                        onClick={handleSubmit(onSave)}\r\n                        type={EButtonIconType.apply}\r\n                        color=\"primary\"\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n            <div className=\"containerNew\">\r\n                <Box className=\"box-container\">\r\n                    <Grid width=\"auto\" container\r\n                        direction=\"column\" rowSpacing={2}  >\r\n                        <Grid key=\"header\" container item columnSpacing={2}>\r\n                            <Grid item>\r\n                                <ButtonFuntion spacingLeft={0} onClick={onAdd} type={EButtonType.addFilter} />\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <SingleAddSelect\r\n                                    data={filterData}\r\n                                    control={control}\r\n                                    name='filterId'\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                        {\r\n                            fields.map((item, index) => {\r\n                                return (\r\n                                    <FilterItem onClearConditionValue={onClearConditionValue}\r\n                                        onClearValue={onClearValue} onDeleteItem={onDeleteItem}\r\n                                        control={control}\r\n                                        key={`item_${item.id}`}\r\n                                        item={item}\r\n                                        getValues={getValues}\r\n                                        setValue={setValue}\r\n                                        index={index} name={`item_${item.id}`}\r\n                                        columnModel={columnModel}></FilterItem>\r\n                                )\r\n                            })\r\n                        }\r\n                        {/* {inputList} */}\r\n                        <Grid key=\"footer\" style={{ display: \"flex\" }} item xs={12}>\r\n                            <ButtonFuntion spacingLeft={0} onClick={onClear} type={EButtonType.clearFilter} />\r\n                            <ButtonFuntion spacingLeft={2} onClick={handleSubmit(onSubmit)} type={EButtonType.apply} />\r\n                            <ButtonFuntion style={{ marginLeft: \"auto\" }} onClick={handleClickSave} type={EButtonType.save} />\r\n                            <PopoverControl\r\n                                anchorEl={anchorSave}\r\n                                onClose={handleCloseSave}\r\n                                genderBody={genderPopoverControl}\r\n                            >\r\n\r\n                            </PopoverControl>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n            </div >\r\n        </Collapse>\r\n    )\r\n}\r\n\r\nFilter.propTypes = {\r\n    anchorEl: PropTypes.bool,\r\n    handleClose: PropTypes.func,\r\n    onColumnConfigChange: PropTypes.func,\r\n    dropdownItem: PropTypes.object,\r\n}\r\nexport default Filter","import React, { useState } from 'react'\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport ButtonFuntion from 'components/button/ButtonFuntion'\r\nimport PropTypes from 'prop-types'\r\nimport { EButtonType } from 'configs/constants'\r\nimport { ConfigColumn, DropdownMenu } from 'components/dropdown'\r\nimport { Filter } from 'components/filter'\r\nimport MenuItem from '@mui/material/MenuItem'\r\nimport { IconDelete } from \"components/icon/icon\"\r\nimport {\r\n    setReload,\r\n} from \"stores/views/master\"\r\n\r\nconst ToolBar = React.memo(props => {\r\n\r\n    const { onAddClick, visible, onDeleteClick, columnModel,\r\n        onColumnConfigChange, onApplyFilter, component, genarateCustomButton } = props\r\n    const [anchorElColumn, setAnchorElColumn] = useState(null)\r\n    const [anchorElFilter, setAnchorElFilter] = useState(false)\r\n    const dispatch = useDispatch()\r\n\r\n    const handleClickColumn = (event) => {\r\n        setAnchorElColumn(event.currentTarget)\r\n    }\r\n\r\n    const handleCloseColumn = () => {\r\n        setAnchorElColumn(null)\r\n    }\r\n\r\n    const handleClickFilter = () => {\r\n        setAnchorElFilter(!anchorElFilter)\r\n    }\r\n\r\n    const genderDropdownItem = () => {\r\n        return <MenuItem disableRipple>\r\n            <IconDelete size={18} />\r\n        </MenuItem>\r\n    }\r\n\r\n    const onRefreshClick = () => {\r\n        dispatch(setReload())\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12 grid-margin  justify-content-end\">\r\n                    <ConfigColumn onColumnConfigChange={onColumnConfigChange} columnModel={columnModel} anchorEl={anchorElColumn} handleClose={handleCloseColumn}></ConfigColumn>\r\n                    <ButtonFuntion spacingLeft={0} visible={visible.column} onClick={handleClickColumn} type={EButtonType.columnConfig} />\r\n                    <ButtonFuntion spacingLeft={1} visible={visible.column} open={anchorElFilter} onClick={handleClickFilter} type={EButtonType.filter} />\r\n                    <DropdownMenu visible={visible.function} type={EButtonType.function} genderDropdownItem={genderDropdownItem} />\r\n                    <ButtonFuntion spacingLeft={1} visible={visible.add} onClick={onAddClick} type={EButtonType.add} />\r\n                    <ButtonFuntion spacingLeft={1} visible={visible.delete} onClick={onDeleteClick} type={EButtonType.delete} />\r\n                    <ButtonFuntion spacingLeft={1} onClick={onRefreshClick} type={EButtonType.refresh} />\r\n                    {genarateCustomButton && genarateCustomButton()}\r\n                </div>\r\n            </div>\r\n            <Filter\r\n                component={component}\r\n                onApplyFilter={onApplyFilter}\r\n                onColumnConfigChange={onColumnConfigChange}\r\n                columnModel={columnModel}\r\n                anchorEl={anchorElFilter}>\r\n            </Filter>\r\n\r\n        </div>\r\n    )\r\n\r\n})\r\nToolBar.propTypes = {\r\n    onAddClick: PropTypes.func,\r\n    onDeleteClick: PropTypes.func,\r\n    onConfigColumn: PropTypes.func,\r\n    columnModel: PropTypes.array,\r\n    onColumnConfigChange: PropTypes.func,\r\n    visible: PropTypes.object,\r\n    dropdownItem: PropTypes.object,\r\n}\r\nToolBar.defaultProps = {\r\n    addVisible: true,\r\n    deleteVisible: false\r\n}\r\nexport default ToolBar","import React, { useState, useEffect, useCallback } from \"react\"\r\nimport style from \"./ResizableNew.scss\"\r\nimport ResizePanel from \"react-resize-panel\"\r\nimport classNames from \"classnames/bind\"\r\nlet cx = classNames.bind(style)\r\n\r\nconst Resizable = React.memo((props) => {\r\n    const { genderLeftComponent, genderRightComponent, hidenRight = true } = props\r\n    return (\r\n        // <div className={cx(\"containerNew\")} style={{ flexFlow: \"column\" }}>\r\n        //     <div className={cx(\"body\")}>\r\n        //         <div className={cx(\"content\", \"panelNew\")}>\r\n        //             {genderLeftComponent()}\r\n        //         </div>\r\n        //         <div hidden={hidenRight}>\r\n        //             <ResizePanel\r\n        //                 direction=\"w\"\r\n        //                 style={{ minWidth: \"40%\", height: \"100%\" }}\r\n        //                 handleClass={style.customHandle}\r\n        //                 borderClass={style.customResizeBorder}\r\n        //             >\r\n        //                 <div className={cx(\"sidebarNew\", \"panelNew\")}>{genderRightComponent && genderRightComponent()}</div>\r\n        //             </ResizePanel>\r\n        //         </div>\r\n        //     </div>\r\n        // </div>\r\n\r\n        <div className=\"body\">\r\n            <div className={cx(\"content\", \"panelNew\")}>\r\n                {genderLeftComponent()}\r\n            </div>\r\n            <ResizePanel\r\n                direction=\"w\"\r\n                style={{ width: \"400px\", display: hidenRight ? 'none' : 'flex' }}\r\n                handleClass=\"customHandle\"\r\n                borderClass=\"customResizeBorder\"\r\n            >\r\n                <div className=\"right-bar panel\">\r\n                    {genderRightComponent && genderRightComponent()}\r\n                </div>\r\n            </ResizePanel>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Resizable\r\n","import * as React from \"react\"\r\nimport Dialog from \"@mui/material/Dialog\"\r\nimport DialogActions from \"@mui/material/DialogActions\"\r\nimport DialogTitle from \"@mui/material/DialogTitle\"\r\nimport { open as openAlert } from \"stores/components/alert-dialog\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport ButtonDetail from \"components/button/ButtonDetail\"\r\nimport IconButton from \"@mui/material/IconButton\"\r\nimport { SpinningCircles } from \"react-loading-icons\"\r\n\r\nconst AlertDialog = (props) => {\r\n  const open = useSelector((state) => state.alertDialog.open)\r\n  const title = useSelector((state) => state.alertDialog.title)\r\n  const loading = useSelector((state) => state.button.loading)\r\n  const dispatch = useDispatch()\r\n  const { t } = useTranslation()\r\n  const { onSubmit } = props\r\n\r\n  const handleClose = () => {\r\n    dispatch(openAlert({ open: false, title: title ? title : t(\"Bạn có chắc muốn xóa dữ liệu này?\") }))\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">\r\n          {title ? title : t(\"Bạn có chắc muốn xóa dữ liệu này?\")}\r\n        </DialogTitle>\r\n        <DialogActions>\r\n          <ButtonDetail onClick={handleClose} type=\"Undo\" />\r\n          <ButtonDetail\r\n            disabled={loading}\r\n            onClick={onSubmit}\r\n            type=\"Accpet\"\r\n            autoFocus={true}\r\n            dis\r\n          ></ButtonDetail>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  )\r\n}\r\nexport default AlertDialog\r\n","import * as React from \"react\"\r\nimport AlertDialog from \"components/popup/AlertDialog\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { loading as loadingButton } from \"stores/components/button\"\r\nimport { openMessage } from \"stores/components/snackbar\"\r\nimport { open as openAlert } from \"stores/components/alert-dialog\"\r\nimport {\r\n    setReload,\r\n} from \"stores/views/master\"\r\nimport { deleteData } from \"services\"\r\nimport { ERROR_CODE } from \"configs\"\r\n\r\nconst ConfirmDeleteDialog = (props) => {\r\n    const { url, id } = props\r\n    const dispatch = useDispatch()\r\n\r\n    const onAcceptDelete = async () => {\r\n        dispatch(loadingButton(true))\r\n        const res = await deleteData(url, id)\r\n        if (res.errorCode == ERROR_CODE.success) {\r\n            dispatch(setReload())\r\n        }\r\n        dispatch(openMessage({ ...res }))\r\n        dispatch(openAlert({ open: false }))\r\n        dispatch(loadingButton(false))\r\n    }\r\n\r\n    return <AlertDialog onSubmit={onAcceptDelete} />\r\n}\r\n\r\nexport default ConfirmDeleteDialog"],"sourceRoot":""}
{"version":3,"sources":["views/signup/JoinTeam/components/JointeamHasAccount.js","views/signup/JoinTeam/components/JoinTeamNoAccount.js","views/signup/JoinTeam/JoinTeam.js"],"names":["JointeamHasAccount","props","history","useHistory","search","useLocation","t","useTranslation","token","queryString","parse","useDispatch","useState","setError","setTokenIsvalid","React","password","confirmPassword","fullName","validationSchema","Yup","shape","useForm","resolver","yupResolver","handleSubmit","register","control","onSubmit","reset","setValue","formState","errors","data","a","find","replace","dataToken","RegExp","isHasAccount","signup","res","errorCode","ERROR_CODE","success","userInfo","accessToken","refreshToken","shopIndex","user","isAdmin","acceptScreen","setTokenLoginSucceeded","push","dirty","msg","title","Grid","container","rowSpacing","item","xs","Button","onClick","variant","JoinTeamNoAccount","setPassword","setLoading","setHasMainAccount","passwordAgain","setPasswordAgain","passwordIsvalid","setPasswordIsvalid","image","values","setValues","replaceAll","str","useEffect","validateToken","validateTokenSignup","status","EUserValidate","IS_HAS_ACCOUNT","required","message","error","fieldNotEmpty","defaultValues","className","onFileChange","src","name","TextInput","autoFocus","label","type","onChange","text","toLowerCase","inputProps","autoComplete","form","startadornment","InputAdornment","position","endadornment","IconButton","showPassword","onMouseDown","event","preventDefault","edge","InputProps","rules","minLength","value","valueAgain","isValid","messages","notEmpty","number","lowercase","match","JoinTeam","loading","hasMainAccount","tokenIsvalid","Spinner","Box","component","sx","m","noValidate","Alert","severity"],"mappings":"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","file":"static/js/21.c1104373.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useLocation, useHistory } from \"react-router-dom\";\r\nimport queryString from \"query-string\";\r\nimport TextInput from \"components/input/TextInput\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport * as Yup from \"yup\";\r\nimport AccountCircle from \"@mui/icons-material/AccountCircle\";\r\nimport { validateTokenSignup, signup } from \"services\";\r\nimport { ERROR_CODE, EUserValidate } from \"configs\";\r\nimport { setTokenLoginSucceeded } from \"helpers\";\r\n\r\nimport PasswordChecklist from \"react-password-checklist\";\r\nimport Spinner from \"components/shared/Spinner\";\r\nimport { message } from \"configs\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport Visibility from \"@mui/icons-material/Visibility\";\r\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\r\n\r\nconst JointeamHasAccount = (props) => {\r\n  const history = useHistory();\r\n  const { search } = useLocation();\r\n  const { t } = useTranslation();\r\n  const { token } = queryString.parse(search);\r\n  const dispatch = useDispatch();\r\n\r\n  const [error, setError] = useState(t(\"Token không hợp lệ\"));\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loading, setLoading] = useState(true);\r\n  const [hasMainAccount, setHasMainAccount] = useState(false);\r\n  const [passwordAgain, setPasswordAgain] = useState(\"\");\r\n  const [tokenIsvalid, setTokenIsvalid] = useState(false);\r\n  const [values, setValues] = React.useState({\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    fullName: \"\",\r\n  });\r\n  function escapeRegExp(string) {\r\n    return string.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\"); // $& means the whole matched string\r\n  }\r\n\r\n  function replaceAll(str, find, replace) {\r\n    return str.replace(new RegExp(escapeRegExp(find), \"g\"), replace);\r\n  }\r\n\r\n  const validationSchema = Yup.object().shape({});\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  const {\r\n    register,\r\n    control,\r\n    handleSubmit,\r\n    reset,\r\n    setValue,\r\n    formState: { errors },\r\n  } = useForm({\r\n    resolver: yupResolver(validationSchema),\r\n  });\r\n  const onSubmit = async (data) => {\r\n    const dataToken = replaceAll(token, \" \", \"+\");\r\n    data.token = dataToken;\r\n    data.isHasAccount=true;\r\n    const res = await signup(data);\r\n    if (res.errorCode == ERROR_CODE.success) {\r\n      const userInfo =  res.data;\r\n      const token = {\r\n        accessToken: userInfo.token,\r\n        refreshToken: userInfo.token,\r\n        shopIndex: userInfo.shopIndex,\r\n      };\r\n      const user = { ...userInfo, isAdmin: true, acceptScreen: [] };\r\n      setTokenLoginSucceeded({ token, user });\r\n      setTokenIsvalid(true);\r\n      history.push(`/dashboard`);\r\n    } else {\r\n      setTokenIsvalid(false);\r\n      setError({\r\n        dirty: true,\r\n        msg: res.title,\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <Grid container rowSpacing={2}>\r\n      <Grid item xs={12}>\r\n        <soan>\r\n          Bạn nhận được lời mời gia nhập, nhấn vào nút bên dưới để tham gia\r\n        </soan>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Button onClick={handleSubmit(onSubmit)} variant=\"contained\">\r\n          {t(\"Tham gia\")}\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\nexport default JointeamHasAccount;\r\n","import React, { useState, useEffect } from \"react\"\r\nimport { useLocation, useHistory } from \"react-router-dom\"\r\nimport queryString from \"query-string\"\r\nimport TextInput from \"components/input/TextInput\"\r\nimport Grid from \"@mui/material/Grid\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport Button from \"@mui/material/Button\"\r\nimport { useForm } from \"react-hook-form\"\r\nimport InputAdornment from \"@mui/material/InputAdornment\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport IconButton from \"@mui/material/IconButton\"\r\nimport * as Yup from \"yup\"\r\nimport AccountCircle from \"@mui/icons-material/AccountCircle\"\r\nimport { validateTokenSignup, signup } from \"services\"\r\nimport { ERROR_CODE, EUserValidate, ESize } from \"configs\"\r\n\r\nimport PasswordChecklist from \"react-password-checklist\"\r\nimport Spinner from \"components/shared/Spinner\"\r\nimport { message } from \"configs\"\r\nimport { yupResolver } from \"@hookform/resolvers/yup\"\r\nimport Visibility from \"@mui/icons-material/Visibility\"\r\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\"\r\nimport { setTokenLoginSucceeded } from \"helpers\"\r\nimport { UploadAvatarControl } from 'components/avatar'\r\n\r\nconst JoinTeamNoAccount = (props) => {\r\n  const history = useHistory()\r\n  const { search } = useLocation()\r\n  const { t } = useTranslation()\r\n  const { token } = queryString.parse(search)\r\n  const dispatch = useDispatch()\r\n\r\n  const [error, setError] = useState(t(\"Token không hợp lệ\"))\r\n  const [password, setPassword] = useState(\"\")\r\n  const [loading, setLoading] = useState(true)\r\n  const [hasMainAccount, setHasMainAccount] = useState(false)\r\n  const [passwordAgain, setPasswordAgain] = useState(\"\")\r\n  const [passwordIsvalid, setPasswordIsvalid] = useState(false)\r\n  const [tokenIsvalid, setTokenIsvalid] = useState(false)\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n  const [values, setValues] = React.useState({\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    fullName: \"\",\r\n    image: ''\r\n  })\r\n  function escapeRegExp(string) {\r\n    return string.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\") // $& means the whole matched string\r\n  }\r\n\r\n  function replaceAll(str, find, replace) {\r\n    return str.replace(new RegExp(escapeRegExp(find), \"g\"), replace)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (token) {\r\n      const data = replaceAll(token, \" \", \"+\")\r\n      validateToken(data)\r\n    } else setLoading(false)\r\n  }, [])\r\n\r\n  const validateToken = async (token) => {\r\n    const res = await validateTokenSignup({ token: token })\r\n    if (res.errorCode == ERROR_CODE.success) {\r\n      setTokenIsvalid(true)\r\n      if (res.data && res.data.status == EUserValidate.IS_HAS_ACCOUNT)\r\n        setHasMainAccount(true)\r\n    } else {\r\n      setError(res.title)\r\n    }\r\n    setLoading(false)\r\n  }\r\n\r\n  const handleChange = (prop) => (event) => {\r\n    setValues({ ...values, [prop]: event.target.value })\r\n  }\r\n\r\n  const handleClickShowPassword = () => {\r\n    setValues({\r\n      ...values,\r\n      showPassword: !values.showPassword,\r\n    })\r\n  }\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    fullName: Yup.string().required(t(message.error.fieldNotEmpty)),\r\n    password: Yup.string().required(t(message.error.fieldNotEmpty)),\r\n    confirmPassword: Yup.string().required(t(message.error.fieldNotEmpty)),\r\n    // password: Yup.string()\r\n    //   .required(t(message.error.fieldNotEmpty))\r\n    //   .min(6, t(\"Mật khẩu tối thiểu 6 ký tự\"))\r\n    //   .matches(\r\n    //     /^(?=.*[a-z])(?=.*[0-9])(?=.{6,})/,\r\n    //     t(\"Mật khẩu phải chứa ít nhất 6 ký tự, bao gồm cả chữ và số\")\r\n    //   ),\r\n    // confirmPassword: Yup.string()\r\n    //   .required(t(message.error.fieldNotEmpty))\r\n    //   .oneOf([Yup.ref(\"password\")], t(\"Nhập lại mật khẩu không đúng\")),\r\n  })\r\n  const defaultValues = {\r\n    fullName: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    image: ''\r\n  }\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault()\r\n  }\r\n\r\n  const {\r\n    register,\r\n    control,\r\n    handleSubmit,\r\n    reset,\r\n    setValue,\r\n    formState: { errors },\r\n  } = useForm({\r\n    resolver: yupResolver(validationSchema),\r\n    defaultValues: defaultValues,\r\n  })\r\n  const onSubmit = async (data) => {\r\n    // alert(JSON.stringify(data))\r\n    // return\r\n    if (!passwordIsvalid) return\r\n\r\n    const dataToken = replaceAll(token, \" \", \"+\")\r\n    data.token = dataToken\r\n    data.isHasAccount = false\r\n    const res = await signup(data)\r\n    if (res.errorCode == ERROR_CODE.success) {\r\n      const userInfo = res.data\r\n      const token = {\r\n        accessToken: userInfo.token,\r\n        refreshToken: userInfo.token,\r\n        shopIndex: userInfo.shopIndex,\r\n      }\r\n      const user = { ...userInfo, isAdmin: true, acceptScreen: [] }\r\n      setTokenLoginSucceeded({ token, user })\r\n      setTokenIsvalid(true)\r\n      history.push(`/dashboard`)\r\n    } else {\r\n      setTokenIsvalid(false)\r\n      setError({\r\n        dirty: true,\r\n        msg: res.title,\r\n      })\r\n    }\r\n  }\r\n\r\n  const onChangePasswordAgain = (text) => {\r\n    setPasswordAgain(text.toLowerCase())\r\n  }\r\n\r\n  const onChangePassword = (text) => {\r\n    setPassword(text.toLowerCase())\r\n  }\r\n\r\n  const onFileChange = (src) => {\r\n    setValue('image', src)\r\n  }\r\n\r\n  return (\r\n    <Grid container rowSpacing={2}>\r\n      <Grid item xs={12} className=\"flex-container\">\r\n        <UploadAvatarControl\r\n          onFileChange={onFileChange}\r\n          control={control}\r\n          name=\"image\"\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <span className=\"text-note\">\r\n          {t(\"Nhập Họ và tên bạn muốn hiển thị\")}\r\n        </span>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <TextInput\r\n          autoFocus={true}\r\n          required={true}\r\n          control={control}\r\n          label={t(\"Họ tên đầy đủ\")}\r\n          name=\"fullName\"\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <TextInput\r\n          required={true}\r\n          control={control}\r\n          label={t(\"Mật khẩu\")}\r\n          name=\"password\"\r\n          type={\"password\"}\r\n          onChange={onChangePassword}\r\n          inputProps={{\r\n            autoComplete: \"new-password\",\r\n            form: {\r\n              autoComplete: \"off\",\r\n            },\r\n            startadornment: (\r\n              <InputAdornment position=\"start\">\r\n                <AccountCircle />\r\n              </InputAdornment>\r\n            ),\r\n            endadornment: (\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  aria-label=\"toggle password visibility\"\r\n                  onClick={handleClickShowPassword}\r\n                  onMouseDown={handleMouseDownPassword}\r\n                  edge=\"end\"\r\n                >\r\n                  {values.showPassword ? <VisibilityOff /> : <Visibility />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <TextInput\r\n          required={true}\r\n          control={control}\r\n          label={t(\"Nhập lại mật khẩu\")}\r\n          name=\"confirmPassword\"\r\n          type={\"password\"}\r\n          onChange={onChangePasswordAgain}\r\n          InputProps={{\r\n            autoComplete: \"new-password\",\r\n            form: {\r\n              autoComplete: \"off\",\r\n            },\r\n          }}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <PasswordChecklist\r\n          rules={[\"notEmpty\", \"minLength\", \"number\", \"lowercase\", \"match\"]}\r\n          minLength={6}\r\n          value={password}\r\n          valueAgain={passwordAgain}\r\n          onChange={(isValid) => setPasswordIsvalid(isValid)}\r\n          messages={{\r\n            minLength: t(\"Mật khẩu tối thiểu 6 ký tự\"),\r\n            notEmpty: t(\"Mật khẩu và nhập lại mật khẩu không được trống\"),\r\n            number: t(\"Mật khẩu phải chứa 1 chữ số\"),\r\n            lowercase: t(\"Mật khẩu phải chứa 1 ký tự\"),\r\n            match: t(\"Nhập lại mật khẩu không trùng khớp\"),\r\n          }}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Button onClick={handleSubmit(onSubmit)} variant=\"contained\">\r\n          {t(\"Tham gia\")}\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default JoinTeamNoAccount","import React, { useState, useEffect } from \"react\"\r\nimport { useLocation } from \"react-router-dom\"\r\nimport queryString from \"query-string\"\r\nimport TextInput from \"components/input/TextInput\"\r\nimport Grid from \"@mui/material/Grid\"\r\nimport Box from \"@mui/material/Box\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport Button from \"@mui/material/Button\"\r\nimport { useForm } from \"react-hook-form\"\r\nimport InputAdornment from \"@mui/material/InputAdornment\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport IconButton from \"@mui/material/IconButton\"\r\nimport * as Yup from \"yup\"\r\nimport AccountCircle from \"@mui/icons-material/AccountCircle\"\r\nimport { validateTokenSignup, signup } from \"services\"\r\nimport { ERROR_CODE, EUserValidate } from \"configs\"\r\nimport Alert from \"@mui/material/Alert\"\r\n\r\nimport PasswordChecklist from \"react-password-checklist\"\r\nimport Spinner from \"components/shared/Spinner\"\r\nimport { message } from \"configs\"\r\nimport { yupResolver } from \"@hookform/resolvers/yup\"\r\nimport Visibility from \"@mui/icons-material/Visibility\"\r\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\"\r\nimport JointeamHasAccount from \"./components/JointeamHasAccount\"\r\nimport JoinTeamNoAccount from \"./components/JoinTeamNoAccount\"\r\n\r\nexport default function JoinTeam() {\r\n  const { search } = useLocation()\r\n  const { t } = useTranslation()\r\n  const { token } = queryString.parse(search)\r\n  const dispatch = useDispatch()\r\n\r\n  const [error, setError] = useState(t(\"Token không hợp lệ\"))\r\n  const [password, setPassword] = useState(\"\")\r\n  const [loading, setLoading] = useState(true)\r\n  const [hasMainAccount, setHasMainAccount] = useState(false)\r\n  const [passwordAgain, setPasswordAgain] = useState(\"\")\r\n  const [passwordIsvalid, setPasswordIsvalid] = useState(false)\r\n  const [tokenIsvalid, setTokenIsvalid] = useState(false)\r\n  const [values, setValues] = React.useState({\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    fullName: \"\",\r\n  })\r\n  function escapeRegExp(string) {\r\n    return string.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\") // $& means the whole matched string\r\n  }\r\n\r\n  function replaceAll(str, find, replace) {\r\n    return str.replace(new RegExp(escapeRegExp(find), \"g\"), replace)\r\n  }\r\n  useEffect(() => {\r\n    if (token) {\r\n      const data = replaceAll(token, \" \", \"+\")\r\n      validateToken(data)\r\n    } else setLoading(false)\r\n  }, [])\r\n  const validateToken = async (token) => {\r\n    const res = await validateTokenSignup({ token: token })\r\n    if (res.errorCode == ERROR_CODE.success) {\r\n      setTokenIsvalid(true)\r\n      if (res.data && res.data.status == EUserValidate.IS_HAS_ACCOUNT)\r\n        setHasMainAccount(true)\r\n    } else {\r\n      setError(res.title)\r\n    }\r\n    setLoading(false)\r\n  }\r\n  const handleChange = (prop) => (event) => {\r\n    setValues({ ...values, [prop]: event.target.value })\r\n  }\r\n  const handleClickShowPassword = () => {\r\n    setValues({\r\n      ...values,\r\n      showPassword: !values.showPassword,\r\n    })\r\n  }\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    fullName: Yup.string().required(t(message.error.fieldNotEmpty)),\r\n    // password: Yup.string()\r\n    //   .required(t(message.error.fieldNotEmpty))\r\n    //   .min(6, t(\"Mật khẩu tối thiểu 6 ký tự\"))\r\n    //   .matches(\r\n    //     /^(?=.*[a-z])(?=.*[0-9])(?=.{6,})/,\r\n    //     t(\"Mật khẩu phải chứa ít nhất 6 ký tự, bao gồm cả chữ và số\")\r\n    //   ),\r\n    // confirmPassword: Yup.string()\r\n    //   .required(t(message.error.fieldNotEmpty))\r\n    //   .oneOf([Yup.ref(\"password\")], t(\"Nhập lại mật khẩu không đúng\")),\r\n  })\r\n  const defaultValues = {\r\n    fullName: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  }\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault()\r\n  }\r\n\r\n  const {\r\n    register,\r\n    control,\r\n    handleSubmit,\r\n    reset,\r\n    setValue,\r\n    formState: { errors },\r\n  } = useForm({\r\n    resolver: yupResolver(validationSchema),\r\n    defaultValues: defaultValues,\r\n  })\r\n  const onSubmit = async (data) => {\r\n    // alert(passwordIsvalid)\r\n    // return\r\n    if (!passwordIsvalid) return\r\n\r\n    const dataToken = replaceAll(token, \" \", \"+\")\r\n    data.token = dataToken\r\n    const res = await signup(data)\r\n    if (res.errorCode == ERROR_CODE.success) {\r\n      setTokenIsvalid(true)\r\n      history.push(`/dashboard`)\r\n    } else {\r\n      setTokenIsvalid(false)\r\n      setError({\r\n        dirty: true,\r\n        msg: res.title,\r\n      })\r\n    }\r\n    // dispatch(openMessage({ ...res }))\r\n  }\r\n  const onChangePasswordAgain = (text) => {\r\n    setPasswordAgain(text.toLowerCase())\r\n  }\r\n\r\n  const onChangePassword = (text) => {\r\n    setPassword(text.toLowerCase())\r\n  }\r\n\r\n  return loading ? (\r\n    <Spinner className={\"spinnerWrapperMaster\"}></Spinner>\r\n  ) : (\r\n    <div>\r\n      <div className=\"d-flex align-items-center auth px-0\">\r\n        <div className=\"row w-100 mx-0\">\r\n          <div className=\"col-lg-4 mx-auto\">\r\n            <div className=\"auth-form-light text-left py-5 px-4 px-sm-5\">\r\n              <Box\r\n                component=\"form\"\r\n                sx={{\r\n                  \"& > :not(style)\": { m: 1 },\r\n                }}\r\n                noValidate\r\n                autoComplete=\"off\"\r\n              >\r\n                <Grid container rowSpacing={2}>\r\n                  <Grid item xs={12}>\r\n                    <h3>{t(\"Tạo tài khoản BNS\")}</h3>\r\n                  </Grid>\r\n                  {tokenIsvalid ? (\r\n                    !hasMainAccount ? (\r\n                      <JoinTeamNoAccount></JoinTeamNoAccount>\r\n                    ) : (\r\n                      <JointeamHasAccount />\r\n                    )\r\n                  ) : (\r\n                    <Alert severity=\"error\">{error}</Alert>\r\n                  )}\r\n                </Grid>\r\n              </Box>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"sourceRoot":""}